rake assets:precompile stuck  couple of days ago i noticed that jquery calendar is not working on my deployment site(heroku). on digging out the problem i noticed that source of site on my dev server has some 100 script tags related to  (i am using     css) but on prod server. i have 4 script tags. on searching i found that i should run  rake assets:precompile  on my rails console fo asset pipeline. but while running it is taking terribly long time, last time it took 6 hours and i had to abort it.    referring to many sites and post, i found that i should change  config.serve_static_assets to  true  and  config.assets.compile  to  true . but problem is still there. i also tried to remove  jquery-rails/jquery-ui-rails  from  gem but problem is still there. here is my  config/environmnets/production.rb      productrecall::application.configure do   # settings specified here will take precedence over those in config/application.rb    # code is not reloaded between requests   config.cache_classes = true    # full error reports are disabled and caching is turned on   config.consider_all_requests_local       = false   config.action_controller.perform_caching = true    # disable rails's static asset server (apache or nginx will already do this)   config.serve_static_assets = true    # compress javascripts and css   config.assets.compress = true    # don't fallback to assets pipeline if a precompiled asset is missed   config.assets.compile = true    # generate digests for assets urls   config.assets.digest = true      # specifies the header that your server uses for sending files   # config.action_dispatch.x_sendfile_header = "x-sendfile" # for apache    config.action_dispatch.x_sendfile_header = 'x-accel-redirect' # for nginx    # force all access to the app over ssl, use strict-transport-security, and use secure cookies.   config.force_ssl = true    # enable locale fallbacks for i18n (makes lookups for any locale fall back to   # the i18n.default_locale when a translation can not be found)   config.i18n.fallbacks = true    # send deprecation notices to registered listeners   config.active_support.deprecation = :notify    # log the query plan for queries taking more than this (works   # with sqlite, mysql, and postgresql)   # config.active_record.auto_explain_threshold_in_seconds = 0.5    config.action_controller.perform_caching  = false end      my  config/application.rb  looks like this     require file.expand_path('../boot', __file__)  # pick the frameworks you want: require "active_record/railtie" require "action_controller/railtie" require "action_mailer/railtie" require "active_resource/railtie" require "sprockets/railtie" # require "rails/test_unit/railtie"  if defined?(bundler)   # if you precompile assets before deploying to production, use this line   bundler.require(*rails.groups(:assets =  %w(development test)))   # if you want your assets lazily compiled in production, use this line   # bundler.require(:default, :assets, rails.env) end  module productrecall   class application   rails::application      # configure the default encoding used in templates for ruby 1.9.     config.encoding = "utf-8"      # configure sensitive parameters which will be filtered from the log file.     config.filter_parameters += [:password]      # enable escaping html in json.     config.active_support.escape_html_entities_in_json = true      # enforce whitelist mode for mass assignment.     # this will create an empty whitelist of attributes available for mass-assignment for all models     # in your app. as such, your models will need to explicitly whitelist or blacklist accessible     # parameters by using an attr_accessible or attr_protected declaration.     config.active_record.whitelist_attributes = true      # enable the asset pipeline     config.assets.enabled = true      # version of your assets, change this if you want to expire all your assets     config.assets.version = '1.0'     config.action_mailer.default_url_options = { host: 'localhost:3000' }   end end      here is my gem file:     source '  'rails', '3.2.13' gem ' -sass', '2.1' gem 'bcrypt-ruby', '3.0.1' gem 'therubyracer', :platforms =  :ruby, :platforms =  :ruby gem 'faker', '1.0.1' gem 'will_paginate', '3.0.3' gem ' -will_paginate', '0.0.6' gem ' -datepicker-rails' gem "google_visualr", "~  2.1.0"  gem ' - -rails' gem "galetahub-simple_captcha", :require =  "simple_captcha" gem 'rufus-scheduler'  group :development, :test do   gem 'sqlite3', '1.3.5'   gem 'rspec-rails', '2.11.0' end  group :development do   gem 'annotate', '2.5.0' end  group :assets do   gem 'sass-rails',   '3.2.5'   gem 'coffee-rails', '3.2.2'   gem 'uglifier', '1.2.3' end  gem 'jquery-rails', '2.0.2'  group :test do   gem 'capybara', '1.1.2'   gem 'factory_girl_rails', '4.1.0'   gem 'cucumber-rails', '1.2.1', :require =  false   gem 'database_cleaner', '0.7.0' end  #gem 'jquery-ui-rails'  group :production do   gem 'pg', '0.12.2' end      plz let me know what is wrong here. as i am terribly stuck with no clue since 2 days  