separately loading in   components  i'm working on a large web project that involves many developers, and i would like to slim down a package of  3 and keep only what we're using. basically, the idea is to cut out any extra overhead when the page loads in the browser.    so there are 2 ways i can go about doing this:    i can either...    a.) remove any extra parts from the library, create a new build, and then load that into our project.    for example:      !-- custom build of a slimmed down   --   script src="/ /3.0.3/js/ .min.js"  /script       or...     b.) modularize the entire  3, separate each component into its own file, and write the entire build into the html, while commenting out the things we don't need.    for example:        !-- all   components--   script src="/ /3.0.3/js/glyphicons_ .min.js"  /script   script src="/ /3.0.3/js/buttongroups.min.js"  /script   script src="/ /3.0.3/js/inputgroups_ .min.js"  /script   !--  script src="/ /3.0.3/js/navs_ .min.js"  /script  don't need this --   script src="/ /3.0.3/js/navbars_ .min.js"  /script   !--  script src="/ /3.0.3/js/breadcrumbs_ .min.js"  /script  don't need this --   script src="/ /3.0.3/js/pagination_ .min.js"  /script        etc...     the advantage of using the second option would be that it would give the other developers more control of the   components that we're loading into the project, without having to go and rebuild it again. if in any event in the future they need to load some new   components, they can just uncomment that line of code. that would make this more flexible for other developers to use, and it wouldn't restrain them from developing further throughout the project using  .    what are some thoughts about this however? would pulling more files into the project (as opposed to pulling in one large file) increase the overhead at loading time? is this against "good/best practice"?  