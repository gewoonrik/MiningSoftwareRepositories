how to get scoped variable to pass between angular   modals  i feel like this may be a duplicate of  angularjs ui modal forms  but i've looked at that for like an hour and i still can't get this to work.    i'm trying to have a modal pop up where you can set the name of something, add that name to an existing hash and then save that hash to an array, but for some reason i can't get the name to bind from the html back to the modal instance, so i'm always stuck with the initial name value.    here's a plunker i made to demonstrate the problem:        here's the code involved for your convenience if you'd rather not look at the plunker:    the html:      !doctype html   html ng-app="plunker"     head       script src=" "      /script       script src="  /ui- -tpls-0.6.0.js"  /script       script src="example.js"  /script       link href="//netdna. cdn.com/ - /2.3.1/css/ -combined.min.css" rel="stylesheet"     /head     body    div ng-controller="modalctrl" ng-init="roll={numsides: 6}"       script type="text/ng-template" id="mymodalcontent.html"       div class="modal-header"           h3 class="modal-title" save your custom roll! /h3       /div       div class="modal-body"          name:  input ng-model="name" /       /div       div class="modal-footer"           button class="btn btn-primary" ng-click="ok()" ok /button           button class="btn btn-warning" ng-click="cancel()" cancel /button       /div   /script    button type="submit" class="btn btn-default" ng-click="save(roll)"  save to common rolls /button      {{roll.name}}   /div     /body   /html       the js:     angular.module('plunker', ['ui. ']); var modalctrl = function ($scope, $modal, $log) {    $scope.name = "initial name";    $scope.save = function (customroll) {      var modalinstance = $modal.open({       templateurl: 'mymodalcontent.html',       controller: saverollctrl,       resolve: {         customroll: function () {       customroll.name = $scope.name;       $log.info('customroll.name: ' + customroll.name);       return customroll;     }   } });  modalinstance.result.then(function(customroll) {     $log.info(customroll);   }, function () {     $log.info('modal dismissed at: ' + new date());   });   }; };  // please note that $modalinstance represents a modal window (instance) dependency. // it is not the same as the $modal service used above.  var saverollctrl = function ($scope, $modalinstance, $log, customroll) {   $log.info('customroll.name: ' + customroll.name);   $scope.name = customroll.name;    $scope.ok = function () {     $log.info('instance name: ' + $scope.name);     customroll.name = $scope.name;     $modalinstance.close(customroll);   };    $scope.cancel = function () {     $modalinstance.dismiss('cancel');   }; };    