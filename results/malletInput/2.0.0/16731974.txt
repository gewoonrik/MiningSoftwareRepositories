  drop down top level navigation make a clickable link  i'm using the-boostrap wordpress theme to create a menu with drop-downs, however the top-level link only reveals the drop-down on clicking   does not go to a page itself when clicked. so in   when i click 'flooring' i want to go to the flooring page as well as revealing the dropdown. code below, thanks in advance          nav class="subnav clearfix"  ul id="menu-product-menu" class="nav nav-pills pull-right"  li id="menu-item-87" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-87 dropdown" data-dropdown="dropdown"  a href=" " class="dropdown-toggle" data-toggle="dropdown" flooring  b class="caret"  /b  /a   ul class="dropdown-menu"       li id="menu-item-88" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-88 dropdown-submenu" data-dropdown="dropdown"  a href=" " class="dropdown-toggle" data-toggle="dropdown" ash flooring /a    ul class="dropdown-menu"           li id="menu-item-82" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-82"  a href=" " ash flooring gallery /a  /li       /ul   /li       li id="menu-item-89" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-89"  a href=" " spruce flooring /a  /li       li id="menu-item-90" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-90"  a href=" " birch flooring /a  /li       li id="menu-item-91" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-91"  a href=" " pecan flooring /a  /li   /ul       /* ============================================================  *  -dropdown.js v2.2.2  * http:// .github.com/ /javascript.html#dropdowns  * ============================================================  * copyright 2012  , inc.  *  * licensed under the apache license, version 2.0 (the "license");  * you may not use this file except in compliance with the license.  * you may obtain a copy of the license at  *  *   *  * unless required by applicable law or agreed to in writing, software  * distributed under the license is distributed on an "as is" basis,  * without warranties or conditions of any kind, either express or implied.  * see the license for the specific language governing permissions and  * limitations under the license.  * ============================================================ */ !function ($) {   "use strict"; // jshint ;_;  /* dropdown class definition   * ========================= */   var toggle = '[data-toggle=dropdown]'     , dropdown = function (element) {         var $el = $(element).on('click.dropdown.data-api', this.toggle)         $('html').on('click.dropdown.data-api', function () {           $el.parent().removeclass('open')         })       }   dropdown.prototype = {     constructor: dropdown   , toggle: function (e) {       var $this = $(this)         , $parent         , isactive       if ($this.is('.disabled, :disabled')) return       $parent = getparent($this)       isactive = $parent.hasclass('open')       clearmenus()       if (!isactive) {         $parent.toggleclass('open')       }       $this.focus()       return false     }   , keydown: function (e) {       var $this         , $items         , $active         , $parent         , isactive         , index       if (!/(38|40|27)/.test(e.keycode)) return       $this = $(this)       e.preventdefault()       e.stoppropagation()       if ($this.is('.disabled, :disabled')) return       $parent = getparent($this)       isactive = $parent.hasclass('open')       if (!isactive || (isactive    e.keycode == 27)) return $this.click()       $items = $('[role=menu] li:not(.divider):visible a', $parent)       if (!$items.length) return       index = $items.index($items.filter(':focus'))       if (e.keycode == 38    index   0) index--                                        // up       if (e.keycode == 40    index   $items.length - 1) index++                        // down       if (!~index) index = 0       $items         .eq(index)         .focus()     }   }   function clearmenus() {     $(toggle).each(function () {       getparent($(this)).removeclass('open')     })   }   function getparent($this) {     var selector = $this.attr('data-target')       , $parent     if (!selector) {       selector = $this.attr('href')       selector = selector    /#/.test(selector)    selector.replace(/.*(?=#[^\s]*$)/, '') //strip for ie7     }     $parent = $(selector)     $parent.length || ($parent = $this.parent())     return $parent   }   /* dropdown plugin definition    * ========================== */   var old = $.fn.dropdown   $.fn.dropdown = function (option) {     return this.each(function () {       var $this = $(this)         , data = $this.data('dropdown')       if (!data) $this.data('dropdown', (data = new dropdown(this)))       if (typeof option == 'string') data[option].call($this)     })   }   $.fn.dropdown.constructor = dropdown  /* dropdown no conflict   * ==================== */   $.fn.dropdown.noconflict = function () {     $.fn.dropdown = old     return this   }   /* apply to standard dropdown elements    * =================================== */   $(document)     .on('click.dropdown.data-api touchstart.dropdown.data-api', clearmenus)     .on('click.dropdown touchstart.dropdown.data-api', '.dropdown form', function (e) { e.stoppropagation() })     .on('touchstart.dropdown.data-api', '.dropdown-menu', function (e) { e.stoppropagation() })     .on('click.dropdown.data-api touchstart.dropdown.data-api'  , toggle, dropdown.prototype.toggle)     .on('keydown.dropdown.data-api touchstart.dropdown.data-api', toggle + ', [role=menu]' , dropdown.prototype.keydown) }(window.jquery);    