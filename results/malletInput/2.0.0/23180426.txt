upgrading rails application to  3  hi i have been following michael hartl's book for developing rails applications. i have reached the end and i want to start using  3 with the app i've developed.    i have followed the instructions on    -sass  but this has not worked. the gem has installed correctly and i can get it to work on my local environment by changing my application.css --> application.css.scss and adding the import " " statement to the file along with having it in custom.css.scss. this doesn't seem right and it doesn't work when i deploy to heroku either.    the set up i am trying to get work is as follows.    gem file     source " "  ruby '2.0.0'  gem 'rails', '4.0.1' gem 'sass-rails' gem ' -sass' gem 'bcrypt-ruby', '3.1.2' gem 'faker', '1.1.2' gem 'will_paginate' gem ' -will_paginate' gem 'sprockets', '2.11.0' gem 'pg'  gem 'uglifier' gem 'coffee-rails' gem 'jquery-rails' gem 'turbolinks' gem 'jbuilder'  group :development, :test do    gem 'rspec-rails'   gem 'guard-rspec'   gem 'spork-rails'   gem 'guard-spork'   gem 'childprocess' end  group :test do   gem 'selenium-webdriver'   gem 'capybara'   gem 'growl'   gem 'factory_girl_rails', '4.2.1' end  group :doc do   gem 'sdoc', require: false end  group :production do   gem 'rails_12factor' end      application.css     /* * this is a manifest file that'll be compiled into application.css, which will include all    the files * listed below. * * any css and scss file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets, * or vendor/assets/stylesheets of plugins, if any, can be referenced here using a relative path. * * you're free to add application-wide styles to this file and they'll appear at the top of the * compiled file, but it's generally better to create a new file per style scope. * *= require_self *= require_tree . */      custom.css.scss     @import " ";  /*mixins, variables etc. */ $graymediumlight: #eaeaea;  @mixin box_sizing{ -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; } /* universal */  html {   overflow-y: scroll; }  body {   padding-top: 60px; } ... ...      ideally i think i should be changing application.css to .css.scss and having importing   there without needing it in my custom.css.scss too. this is causing an error when deploying to heroku, that is saying that application.css is already required.     update     as per the advice bellow i have removed      import " ";      from custom.css.scss and added it to the renamed application.css.scss. this now looks like   @import " "; @import "custom";     i cleared the tmp folder using     rake tmp:clear      and then refreshed the page.     individually importing the css.scss files seems to have solved my problems  