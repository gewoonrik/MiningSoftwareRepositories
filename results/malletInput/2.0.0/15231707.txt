modify collapse plugin to work with select = selected  i am trying to use a   select   so that on change it hide/shows a div.     i want to make use of the     collapse plugin.     i have it half working with this example        but when you add  selected  to the select it breaks everything:          div class="accordion" id="accordion"        div class="accordion-group"         select class="accordion-toggle"            option value="1" data-toggle="collapse" data-parent="#accordion" data-target="#collapseone" 1 /option            option value="2" data-toggle="collapse" data-parent="#accordion" data-target="#collapsetwo" 2 /option            option value="3" data-toggle="collapse" data-parent="#accordion" data-target="#collapsethree" 3 /option         /select          div id="collapseone" class=" collapse in"           div class="accordion-inner"            anim1 pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. food truck quinoa nesciunt laborum eiusmod. brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. ad vegan excepteur butcher vice lomo. leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable vhs.          /div         /div       /div       div class="accordion-group"         div id="collapsetwo" class=" collapse"           div class="accordion-inner"            anim2 pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. food truck quinoa nesciunt laborum eiusmod. brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. ad vegan excepteur butcher vice lomo. leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable vhs.          /div         /div       /div       div class="accordion-group"         div id="collapsethree" class=" collapse"           div class="accordion-inner"            anim3 pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. food truck quinoa nesciunt laborum eiusmod. brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. ad vegan excepteur butcher vice lomo. leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable vhs.          /div         /div       /div   /div       js - i guess i would need to add to the plugin to check if there is a  selected="selected"  so that it works with selects also, but i cant figure out where abouts this needs to go?     /* =============================================================  *  -collapse.js v2.3.1  * http:// .github.com/ /javascript.html#collapse  * =============================================================  * copyright 2012  , inc.  *  * licensed under the apache license, version 2.0 (the "license");  * you may not use this file except in compliance with the license.  * you may obtain a copy of the license at  *  *   *  * unless required by applicable law or agreed to in writing, software  * distributed under the license is distributed on an "as is" basis,  * without warranties or conditions of any kind, either express or implied.  * see the license for the specific language governing permissions and  * limitations under the license.  * ============================================================ */   !function ($) {    "use strict"; // jshint ;_;    /* collapse public class definition   * ================================ */    var collapse = function (element, options) {     this.$element = $(element)     this.options = $.extend({}, $.fn.collapse.defaults, options)      if (this.options.parent) {       this.$parent = $(this.options.parent)     }      this.options.toggle    this.toggle()   }    collapse.prototype = {      constructor: collapse    , dimension: function () {       var haswidth = this.$element.hasclass('width')       return haswidth ? 'width' : 'height'     }    , show: function () {       var dimension         , scroll         , actives         , hasdata        if (this.transitioning || this.$element.hasclass('in')) return        dimension = this.dimension()       scroll = $.camelcase(['scroll', dimension].join('-'))       actives = this.$parent    this.$parent.find('  .accordion-group   .in')        if (actives    actives.length) {         hasdata = actives.data('collapse')         if (hasdata    hasdata.transitioning) return         actives.collapse('hide')         hasdata || actives.data('collapse', null)       }        this.$element[dimension](0)       this.transition('addclass', $.event('show'), 'shown')       $.support.transition    this.$element[dimension](this.$element[0][scroll])     }    , hide: function () {       var dimension       if (this.transitioning || !this.$element.hasclass('in')) return       dimension = this.dimension()       this.reset(this.$element[dimension]())       this.transition('removeclass', $.event('hide'), 'hidden')       this.$element[dimension](0)     }    , reset: function (size) {       var dimension = this.dimension()        this.$element         .removeclass('collapse')         [dimension](size || 'auto')         [0].offsetwidth        this.$element[size !== null ? 'addclass' : 'removeclass']('collapse')        return this     }    , transition: function (method, startevent, completeevent) {       var that = this         , complete = function () {             if (startevent.type == 'show') that.reset()             that.transitioning = 0             that.$element.trigger(completeevent)           }        this.$element.trigger(startevent)        if (startevent.isdefaultprevented()) return        this.transitioning = 1        this.$element[method]('in')        $.support.transition    this.$element.hasclass('collapse') ?         this.$element.one($.support.transition.end, complete) :         complete()     }    , toggle: function () {       this[this.$element.hasclass('in') ? 'hide' : 'show']()     }    }    /* collapse plugin definition   * ========================== */    var old = $.fn.collapse    $.fn.collapse = function (option) {     return this.each(function () {       var $this = $(this)         , data = $this.data('collapse')         , options = $.extend({}, $.fn.collapse.defaults, $this.data(), typeof option == 'object'    option)       if (!data) $this.data('collapse', (data = new collapse(this, options)))       if (typeof option == 'string') data[option]()     })   }    $.fn.collapse.defaults = {     toggle: true   }    $.fn.collapse.constructor = collapse    /* collapse no conflict   * ==================== */    $.fn.collapse.noconflict = function () {     $.fn.collapse = old     return this   }    /* collapse data-api   * ================= */    $(document).on('click.collapse.data-api', '[data-toggle=collapse]', function (e) {     var $this = $(this), href       , target = $this.attr('data-target')         || e.preventdefault()         || (href = $this.attr('href'))    href.replace(/.*(?=#[^\s]+$)/, '') //strip for ie7       , option = $(target).data('collapse') ? 'toggle' : $this.data()     $this[$(target).hasclass('in') ? 'addclass' : 'removeclass']('collapsed')     $(target).collapse(option)   })  }(window.jquery);           