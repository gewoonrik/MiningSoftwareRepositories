Incorporating Bootstrap into a git repo, using subtree merging  I'm working on a project where we'd like to edit the LESS files that came with Twitter Bootstrap. The  standard advice  is to leave those files untouched, to make it easier to upgrade Bootstrap. But that advice isn't working for us; our code is becoming fragile and hard to maintain.    It seems like it should be possible to solve this with git subtree merging: We could edit Bootstrap's LESS files to have clear, maintainable code, then use git's merge tools to bring in new versions of Bootstrap.    We've come up with a plan for using subtree merging. But before we put the plan into action, I'd like to get some feedback:  Are there significant drawbacks that we've overlooked? Is there a better/simpler approach?     Approaches with significant drawbacks    In the  simplest approach  to subtree merging, all the commits from the subtree (i.e., Bootstrap) are merged into your project's    