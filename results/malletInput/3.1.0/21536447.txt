why does ie 8 crash with  , knockout validation and custom binding handler when mouse out of parent?  ok.. this is a crazy bug that me and a colleague cannot figure out.  internet explorer 8 crashes (no console error message).  it happens when a knockout observable value is changed using a radio input with a custom binding (data-bind) and you move out of the parent dom container.  this error cannot be reproduced using internet explorer 9 in ie 8 browser mode - only a true standalone internet explorer 8 install will produce this error.     one thing that i did notice, is that if the knockout.validation library is not included the crash does not occur.     steps to reproduce:      copy / paste the code below to an new html file   open the newly created html file using a standalone version of internet explorer 8   click the yes or no button on the html page   move pointer outside of red border (this triggers the crash)      here is the code..      html   head       title   / knockout validation radio button test /title       meta http-equiv="x-ua-compatible" content="ie=edge" /       !-- html5 shim and respond.js ie8 support of html5 elements and media queries --       !--[if lt ie 9]           script src=" " type="text/javascript"  /script           script src=" " type="text/javascript"  /script       ![endif]--       script src=" " type="text/javascript"  /script       link href="  cdn.com/ /3.1.0/css/ .min.css" rel="stylesheet" media="screen, print"          script src="  cdn.com/ /3.1.0/js/ .min.js"  /script       script src=" "  /script       script src=" "  /script       script src=" "  /script   /head   body        center style="border: 1px solid red;"           div   3.1.0 / knockoutjs 3.0.0 /div           div class="btn-group" data-toggle="buttons"               label class="btn btn-primary"                   input type="radio" name="inputouterisleased" data-bind="bschecked: outerisleased" value="true"                  yes              /label               label class="btn btn-primary"                   input type="radio" name="inputouterisleased"  data-bind="bschecked: outerisleased" value="false"                  no              /label           /div           span class="error-msg clearfix" data-bind='validationmessage: outerisleased'  /span       /center       center           div               h2 outerisleased value,  span data-bind="text: outerisleased"   /span ! /h2           /div       /center    /body   script type="text/javascript"   // here's my data model var vehicleprofile = function(data, parent) {     var self = this;     self.isleased = ko.observable(false);     self.viewisleased = function() { alert(ko.utils.unwrapobservable(self.isleased)); }; };  var viewmodel = function () {     var self = this;     self.outerisleased = ko.observable(false);     self.viewouterisleased = function () { alert(ko.utils.unwrapobservable(self.outerisleased)); }; };  my = { viewmodel: new viewmodel() };  ko.validation.configure({      decorateelement: true,      registerextenders: true,      messagesonmodified: true,      insertmessages: false,      parseinputattributes: true,      messagetemplate: null,      errorelementclass: 'has-error',      grouping: { deep: true }  });  ko.bindinghandlers.bschecked = {     init: function (element, valueaccessor, allbindingsaccessor, viewmodel, bindingcontext) {         var value = valueaccessor();         var newvalueaccessor = function () {             return { change: function () { value(element.value); } }         };         ko.bindinghandlers.event.init(element, newvalueaccessor, allbindingsaccessor, viewmodel, bindingcontext);     },     update: function (element, valueaccessor, allbindingsaccessor, viewmodel, bindingcontext) {         if ($(element).val() == ko.unwrap(valueaccessor())) {             $(element).closest('.btn').button('toggle');         }     } }  ko.applybindings(my.viewmodel);   /script   /html     