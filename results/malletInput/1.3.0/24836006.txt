  css customizations and javascript not loading (ruby 1.9.3p547, rails 4.1.4)  i am building a basic ror application right now, but in both my development and production environments, i am unable to make customizations to the boostrap css, and the javascript isn't loading (it is however for my jw player on the homepage).  for instance, the dropdown function isn't working for the navbar, and the "destroy" function isn't working when i try to delete files.    here is my gemfile:          source '     ruby '2.0.0'      # bundle edge rails instead: gem 'rails', github: 'rails/rails'     gem 'rails', '4.0.2'      # use scss for stylesheets     gem 'sass-rails', '~  4.0.0'      # use uglifier as compressor for javascript assets     gem 'uglifier', ' = 1.3.0'      # use coffeescript for .js.coffee assets and views     gem 'coffee-rails', '~  4.0.0'      # see   for more supported runtimes     # gem 'therubyracer', platforms: :ruby      # use jquery as the javascript library     gem 'jquery-rails'      # turbolinks makes following links in your web application faster. read more:      gem 'turbolinks'      # build json apis with ease. read more:      gem 'jbuilder', '~  1.2'      gem ' -sass'      gem 'devise', '~  3.1.0.rc2'      gem 'rake', '~  10.3.2'      gem 'jwplayer-rails', '~  1.0.1'      group :development, :test do         gem 'sqlite3'     end      group :production do         gem 'pg'         gem 'rails_12factor'     end      group :doc do       # bundle exec rake doc:rails generates the api under doc/api.       gem 'sdoc', require: false     end      # use activemodel has_secure_password     # gem 'bcrypt-ruby', '~  3.1.2'      # use unicorn as the app server     # gem 'unicorn'      # use capistrano for deployment     # gem 'capistrano', group: :development      # use debugger     # gem 'debugger', group: [:development, :test]  */-------------------------------------------------*/  application.js:  //= require jwplayer.shuffle //= require jwplayer.shuffle.min //= require   //= require jquery //= require jquery_ujs //= require turbolinks //= require_tree .  */-------------------------------------------------*/  application.css:   *= require_tree .  *= require_self  */  */-------------------------------------------------*/  i placed these css customizations in an scss file, which are not being recognized:   @import " ";  $body-bg:                      #ecf0f1; $font-family-sans-serif:       'lato', sans-serif; $navbar-height:                110px;                         $navbar-margin-bottom:         0px; $navbar-default-bg:            black; $navbar-default-brand-color:   #ffffff; $brand-primary:                #ff00ff; $link-hover-color:             #00ffff;  */-------------------------------------------------*/  application.html.rb file:      %= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' =  true %     %= javascript_include_tag 'application', 'data-turbolinks-track' =  true %     %= csrf_meta_tags %   development.rb file:   rails.application.configure do   # settings specified here will take precedence over those in config/application.rb.    # in the development environment your application's code is reloaded on   # every request. this slows down response time but is perfect for development   # since you don't have to restart the web server when you make code changes.   config.cache_classes = false    # do not eager load code on boot.   config.eager_load = false    # show full error reports and disable caching.   config.consider_all_requests_local       = true   config.action_controller.perform_caching = false    # don't care if the mailer can't send.   config.action_mailer.raise_delivery_errors = false    # print deprecation notices to the rails logger.   config.active_support.deprecation = :log    # raise an error on page load if there are pending migrations.   config.active_record.migration_error = :page_load    # debug mode disables concatenation and preprocessing of assets.   # this option may cause significant delays in view rendering with a large   # number of complex assets.   config.assets.debug = true    # adds additional error checking when serving assets at runtime.   # checks for improperly declared sprockets dependencies.   # raises helpful error messages.   config.assets.raise_runtime_errors = true    # raises error for missing translations   # config.action_view.raise_on_missing_translations = true end  */-------------------------------------------------*/  production.rb:   rails.application.configure do   # settings specified here will take precedence over those in config/application.rb.    # code is not reloaded between requests.   config.cache_classes = true    # eager load code on boot. this eager loads most of rails and   # your application in memory, allowing both threaded web servers   # and those relying on copy on write to perform better.   # rake tasks automatically ignore this option for performance.   config.eager_load = true    # full error reports are disabled and caching is turned on.   config.consider_all_requests_local       = false   config.action_controller.perform_caching = true    # enable rack::cache to put a simple http cache in front of your application   # add `rack-cache` to your gemfile before enabling this.   # for large-scale production use, consider using a caching reverse proxy like nginx, varnish or squid.   # config.action_dispatch.rack_cache = true    # disable rails's static asset server (apache or nginx will already do this).   config.serve_static_assets = false    # compress javascripts and css.   config.assets.js_compressor = :uglifier   # config.assets.css_compressor = :sass    # do not fallback to assets pipeline if a precompiled asset is missed.   config.assets.compile = false    # generate digests for assets urls.   config.assets.digest = true    # `config.assets.precompile` has moved to config/initializers/assets.rb    # specifies the header that your server uses for sending files.   # config.action_dispatch.x_sendfile_header = "x-sendfile" # for apache   # config.action_dispatch.x_sendfile_header = 'x-accel-redirect' # for nginx    # force all access to the app over ssl, use strict-transport-security, and use secure cookies.   # config.force_ssl = true    # set to :debug to see everything in the log.   config.log_level = :info    # prepend all log lines with the following tags.   # config.log_tags = [ :subdomain, :uuid ]    # use a different logger for distributed setups.   # config.logger = activesupport::taggedlogging.new(sysloglogger.new)    # use a different cache store in production.   # config.cache_store = :mem_cache_store    # enable serving of images, stylesheets, and javascripts from an asset server.   # config.action_controller.asset_host = " "    # precompile additional assets.   # application.js, application.css, and all non-js/css in app/assets folder are already added.   # config.assets.precompile += %w( search.js )    # ignore bad email addresses and do not raise email delivery errors.   # set this to true and configure the email server for immediate delivery to raise     delivery errors.   # config.action_mailer.raise_delivery_errors = false    # enable locale fallbacks for i18n (makes lookups for any locale fall back to   # the i18n.default_locale when a translation cannot be found).   config.i18n.fallbacks = true    # send deprecation notices to registered listeners.   config.active_support.deprecation = :notify    # disable automatic flushing of the log to improve performance.   # config.autoflush_log = false    # use default logging formatter so that pid and timestamp are not suppressed.   config.log_formatter = ::logger::formatter.new    # do not dump schema after migrations.   config.active_record.dump_schema_after_migration = false end  */-------------------------------------------------*/      can anyone provide assistance with this problem?  i would greatly appreciate it.  as i mentioned in the header, i am running ruby 1.9.3 and rails 4.1.4.      