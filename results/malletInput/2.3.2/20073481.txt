ng-grid hiding   styled dropdowns  i am upgrading a table form. each row in the table has several elements, including two drop downs in specific columns for each row. i have upgraded the table to ng-grid and upgraded the drop-downs from plain select widgets to styled    drop-down elements  to match the others on the site. the essential problem i am having is that the css layout of ng-grid causes the actual drop down menu to be put behind the cell below, and so not visible. examining the elements shows that they are actually being rendered, have proper height, width and content, but are merely displayed behind the content in the other cell. i have tried disabling the css overflow: hidden on the desired cells, but it seems this property is also set for the entire  grid and turning it off at that level totally breaks the grid layout. i have a working workaround, but it makes me want to take a shower and i am sure there is a more elegant way to do this:    1) put a cell template in for just the visible part, including an ng-click call passing the column (coffeescript):         when a user clicks on the (apparent) drop down, the following happens:    1) ng-click event delivers the column to the class, this is stored    2) row select (afterselectionchange) callback triggers with the row and is able to get the column from the previous call, with both the row and column we now know the actual cell    3) the exact screen position of the cell in question is grabbed and the drop-down selections template is made visible directly below the clicked cell, making the illusion of a normal drop-down operation.     this is a long explanation, but wanted to give the background of what i have tried, to show that i am looking for a simpler (hopefully much simpler) way to just include styled   drop-down widgets in ng-grid cells. the entire thrust of this project is to style and beautify already working forms so solutions that work only by cutting style for pure functionality don't really serve the purpose.  