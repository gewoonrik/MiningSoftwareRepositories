responsive   won't precompile  i'm not too familiar with the inner workings of html. i depend on   a little too much to work its magic for me, so i finally found a place where i'm completely stumped. i need to make the views for my app responsive to detect the resolution of the screens of devices connecting to it. on my local machine, this worked out just fine. i added in the third  stylesheet_link_tag  to my  layout/application.html.haml  file, as you can see below, as well as the  %meta  line following it.     !!! %html   %head     %title wallyworld     = stylesheet_link_tag    "application", :media =  "all"     = stylesheet_link_tag    " "     = stylesheet_link_tag    "assets/css/ -responsive.css", :rel =  'stylesheet/less'     = javascript_include_tag "application"     = csrf_meta_tags     %meta{:content =  "width=device-width, initial-scale=1.0", :name =  "viewport"}   %body     // the rest...      again, a lot of this doesn't make sense to me. just following along with the  documentation  as best i can.    everything works fine on my local machine with this in effect. however, when i  cap deploy  it and start up the  unicorn  server on the production box, i get the following error:     2013-08-06 12:57:54 fatal --  actionview::template::error (assets/css/ -responsive.css isn't precompiled):   4:     %title wallyworld   5:     = stylesheet_link_tag    "application", :media =  "all"   6:     = stylesheet_link_tag    " "   7:     = stylesheet_link_tag    "assets/css/ -responsive.css", :rel =  'stylesheet/less'   8:     = javascript_include_tag "application"   9:     = csrf_meta_tags   10:     %meta{:content =  "width=device-width, initial-scale=1.0", :name =  "viewport"} app/views/layouts/application.html.haml:7:in `_app_views_layouts_application_html_haml__3068307506204356330_32376380'      ok, great.   -responsive.css  isn't precompiled. well, i don't actually know how to do that manually. i tried to download my own custom version of  , as suggested by  this article , but i'm even more confused now. i have no idea how to get any of that stuff working at all.    any suggestions or explanations as to what the actual process is to get this stuff working would be great. it's strangely difficult to find an explanation on this, at least in terms that i can understand.    ==== edit to add in production.rb ====     wallyworld::application.configure do   # settings specified here will take precedence over those in config/application.rb    # code is not reloaded between requests   config.cache_classes = true    # full error reports are disabled and caching is turned on   config.consider_all_requests_local       = false   config.action_controller.perform_caching = true    # disable rails's static asset server (apache or nginx will already do this)   config.serve_static_assets = false    # compress javascripts and css   config.assets.compress = true    # don't fallback to assets pipeline if a precompiled asset is missed   config.assets.compile = false    # generate digests for assets urls   config.assets.digest = true    # defaults to nil and saved in location specified by config.assets.prefix   # config.assets.manifest = your_path    # specifies the header that your server uses for sending files   # config.action_dispatch.x_sendfile_header = "x-sendfile" # for apache   # config.action_dispatch.x_sendfile_header = 'x-accel-redirect' # for nginx    # force all access to the app over ssl, use strict-transport-security, and use secure cookies.   # config.force_ssl = true    # see everything in the log (default is :info)   # config.log_level = :debug    # prepend all log lines with the following tags   # config.log_tags = [ :subdomain, :uuid ]    # use a different logger for distributed setups   # config.logger = activesupport::taggedlogging.new(sysloglogger.new)    # use a different cache store in production   # config.cache_store = :mem_cache_store    # enable serving of images, stylesheets, and javascripts from an asset server   # config.action_controller.asset_host = " "    # precompile additional assets (application.js, application.css, and all non-js/css are already added)   config.assets.precompile += %w( assets/css/ -responsive.css )    # disable delivery errors, bad email addresses will be ignored   # config.action_mailer.raise_delivery_errors = false    # enable threaded mode   # config.threadsafe!    # enable locale fallbacks for i18n (makes lookups for any locale fall back to   # the i18n.default_locale when a translation can not be found)   config.i18n.fallbacks = true    # send deprecation notices to registered listeners   config.active_support.deprecation = :notify    # log the query plan for queries taking more than this (works   # with sqlite, mysql, and postgresql)   # config.active_record.auto_explain_threshold_in_seconds = 0.5 end    