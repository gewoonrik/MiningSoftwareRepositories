    2.3 - trying to make 5 vertically stacked elements total height always equal parent element  per the title, regardless of parent size (and still remain responsive) i've tried with other css examples but they contradict the tbs framework.  even tried making the parent a fixed height - i'm going in circles.    for desktop, i'm going for having the 5 stacked elements serve as navigation on right and having the main content on the left.  on the jsfiddle,you'll have to stretch out the html window some to see what i mean.    when i get down to phone, it gets replaced with something else so i'm not concerned about that.  i just want it responsive to a certain point.           thanks in advance      link href="//cdnjs.cloudflare.com/ajax/libs/ - /2.3.2/css/ -responsive.min.css" rel="stylesheet" media="screen"        body class="container-fluid"        section id="mini_nav"                div class="row-fluid"                     div class="span9"                           div id="page1" class="content"                               h2 page 1 content /h2                              lorem ipsum is simply dummy text of the printing and typesetting industry. lorem ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. it has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. it was popularised in the 1960s with the release of letraset sheets containing lorem ipsum passages, and more recently with desktop publishing software like aldus pagemaker including versions of lorem ipsum.                             lorem ipsum is simply dummy text of the printing and typesetting industry. lorem ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. it has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. it was popularised in the 1960s with the release of letraset sheets containing lorem ipsum passages, and more recently with desktop publishing software like aldus pagemaker including versions of lorem ipsum.                          /div                            div id="page2" class="content"                               h2 page 2 content /h2                               !-- page 2 content --                           /div                            div id="page3" class="content"                               h2 page 3 /h2                               !-- page 3 content --                           /div                            div id="page4" class="content"                               h2 page 4 /h2                               !-- page 4 content --                           /div                            div id="page5" class="content"                               h2 page 5 /h2                               !-- page 4 content --                           /div                    /div                    div id="mini_nav_menu" class="span3"                        ul                           li  a href="#page1" page 1 /a  /li                           li  a href="#page2" page 2 /a  /li                           li  a href="#page3" page 3 /a  /li                           li  a href="#page4" page 4 /a  /li                           li  a href="#page5" page 5 /a  /li                                                           /ul                    /div            /div  !--row-fluid--    /section  !--mini-nav--        /body   #mini_nav {     background: #0e678c;     overflow: hidden;     margin: 1em 0 5em 0; }  #mini_nav ul li {     list-style-type: none;     background: #0b4760; }  #mini_nav  ul li a {     display: block;     text-decoration: none;     padding: 0.75em; }  #mini_nav ul li.active a {background: #072837;}    