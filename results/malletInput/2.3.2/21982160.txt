attaching   tooltip to an image in a cell when the datatable is displayed in a   modal  i have the following situation: - in a   modal i displayed a datatable that is loaded from a restful service. on the last column, depending on the data (true or false) from service, i want to display an font-awesome icon. on that icon i want to use the   tooltip to show the user a text ("alive" or "dead").    the problem is as follows: - when i attach the tooltip, if i hover the cursor over the icon, then the rows from the table flickers and disappear and in the firebug console i see that the ajax call (that loads the table) is repeated indefinitely. in that situation the datatable loads data from backend endlessly and he doesn't have time to display anything. in another part of the project i have another instance of datatable displayed, and there, the   tooltip is displayed correctly. the only difference is that datatable is displayed in body, not   modal. somehow, i think that the modal has a connection with this problem.    adittional information (library's used): - jquery datatable version: 1.9.4 -   version 2.3.2    please help me display correctly the   tooltip in datatable.    the code i used is like this:      a class="btn" id="agentstatusbtn" launch agent status /a    div id="showagentsstatusmodal" class="modal hide" tabindex="-1" role="dialog" aria-labelledby="showagentsstatusmodal" aria-hidden="true"     div class="modal-header"       button type="button" class="close" data-dismiss="modal" aria-hidden="true" ã— /button       h3 agents status /h3     /div     div class="modal-body"       div class="container-fluid"         div class="row-fluid" id="agentsstatustablecontainer"          /div       /div     /div     div class="modal-footer"       button class="btn" data-dismiss="modal" aria-hidden="true" close /button     /div   /div       script :         var agentsstatusmanager = {         modalisloaded: false,         tableurl: "restfull service url",         target: $("#agentsstatustablecontainer"),         tableref: "",         tablecontainerheightparam: null,         init: function(){             var that = this;              $(window)                 .off("resize.agentsstatus")                 .on("resize.agentsstatus", function() {                     that.centermodalonscreen();                     that.calculatecolumnheights();                 });              if (!this.modalisloaded) {                 this.centermodalonscreen();                 this.calculatecolumnheights();                  this.modalisloaded = true;             }              this.render();         },          centermodalonscreen: function(){             var modal = $("#showagentsstatusmodal");             var modalwidth = modal.width();             var modalheight = modal.height();              modal.css({               top: ($(window).height() - modalheight) / 2 + "px",               left: ($(window).width() - modalwidth) / 2 + "px"             });         },          calculatecolumnheights: function(){             var agentsstatusmodalheight = $("#showagentsstatusmodal").height();             var agentsstatusmodalheaderheight = $("#showagentsstatusmodal .modal-header").outerheight(true);             var agentsstatusmodalfooterheight = $("#showagentsstatusmodal .modal-footer").outerheight(true);              var columnheight = agentsstatusmodalheight - agentsstatusmodalheaderheight - agentsstatusmodalfooterheight;             this.target.height(columnheight + "px");             this.tablecontainerheightparam = columnheight;         },          options: {             "sdom": "t",             "bpaginate": false,             "sscrolly": "",             "sajaxdataprop": "",             "bdestroy": true,             "olanguage": {"semptytable": "there are no records available."},             "fninitcomplete": function (osettings, json) {                console.log("agents status table was rendered");                  $(".statuscontainer").tooltip();                 //$(".statuscontainer", this.fngetnodes()).tooltip();              },             "fndrawcallback": function(){                 //$(".statuscontainer").tooltip();                 //$(".statuscontainer", this.fngetnodes()).tooltip();             },             "aocolumns": []         },          generatecolumns: function(){             var columns= [                             { bvisible: true, swidth: 100, stitle:"agent name", "mdata": "agent.agentname", sdefaultcontent: ""},                             { bvisible: true, bsortable: false, stitle:"ip", "mdata": "agent.ip", sdefaultcontent: ""},                             { bvisible: true, bsortable: false, stitle:"ping update", "mdata": "agent.lastpingupdate", sdefaultcontent: ""},                             { bvisible: true, bsortable: false, stitle:"max memory", "mdata": "agent.maxmemory", sdefaultcontent: ""},                             { bvisible: true, bsortable: false, stitle:"total memory", "mdata": "agent.totalmemory", sdefaultcontent: ""},                             { bvisible: true, bsortable: false, stitle:"free memory", "mdata": "agent.freememory", sdefaultcontent: ""},                             { bvisible: true, bsortable: false, stitle:"status", "mdata": "agent.isalive", sclass: "statusaligncenter", sdefaultcontent: "",                                 mrender: function(mdata){                                     if(mdata){                                         //the agent is alive                                         return " a href='#' class='statuscontainer' rel='tooltip' title='alive'  b class='fa fa-check-circle agentisalive'  /b  /a "                                     } else{                                         //the agent is dead                                         return " a href='#' class='statuscontainer' rel='tooltip' title='dead'  b class='fa fa-times-circle agentisdead'  /b  /a "                                     }                                 }                             }                          ];             this.options.aocolumns= columns;         },          render: function(){             var that=this;              this.empty();              //here i calculate the height of the table container from pluggin             this.options.sscrolly = this.tablecontainerheightparam - 40 + "px";              //here we load the table from the ajax source             this.options.sajaxsource = this.tableurl;              var agentsstatusdt = $(' table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered table-hover" id="agentsstatusdt"  /table ');              //if exists don't add multiple times             if ($("#agentsstatusdt", this.target).length  = 0) {                 this.target.append(agentsstatusdt);             }              this.generatecolumns();              //here we initialize the datatable plugin             this.tableref = agentsstatusdt.datatable(this.options);         },          reload: function () {             this.tableref.fncleartable();              this.tableref.fnreloadajax(function() {}, this.tableurl);         },          empty: function() {             this.target.empty();             this.tableref = null;         } }    