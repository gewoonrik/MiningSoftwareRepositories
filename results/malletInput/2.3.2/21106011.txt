  popover directive and nested element with angularjs  i've been trying to create a directive which i can arbitrarily add to an existing form (as attribute), which makes the form become a popover upon clicking on a nearby trigger link. i've got the directive to work once, but once i click the link again, the underlying data does not change and the buttons (eg. 'close') stop working.    a plunker can be found here:        steps to reproduce: 1. click on link, 2. change text (note that link text changes as well), 3. click close (ok doesn't do the right thing at current), 4. click on link again, 5. try to change text/click close, but nothing works...    i've read that a problem is that popovers in   are detached/attached to the dom, but i don't know how i could resolve this issue anyway. i also would like to avoid third party libraries (such as angular-ui), as i'd like to avoid the overhead.    any help is greatly appreciated.     update  thanks to vasaka's hint, i was able to progress a little further. the problem slightly changed in that the nested directive now does not seem to benefit from the  $compile , i.e. i don't believe it is attached to the scope.    to reproduce the behaviour, click on the date (plunker link below), click on the date in the popover (date should increment) and close the popover. repeating the steps again, you will notice that incrementing the date doesn't work any more. i tried to add  $compile(element.contents())(scope)  in an attempt to also compile the nested directive  simple-date-picker , but this didn't resolve the issue.    here's the updated plunker:        and the updated code:      !doctype html   html      head       link data-require=" -css@*" data-semver="3.0.3" rel="stylesheet" href="//netdna. cdn.com/ /3.0.3/css/ .min.css" /       script data-require="jquery@1.9.1" data-semver="1.9.1" src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"  /script       script data-require=" @2.3.2" data-semver="2.3.2" src="//netdna. cdn.com/ - /2.3.2/js/ .min.js"  /script       script data-require="angular.js@1.2.5" data-semver="1.2.5" src=" "  /script        style      body {margin-top:40px; margin-left:40px;}      /style       script        var module = angular.module('module', []);        module.directive('simpledatepicker', function($compile) {         return {           restrict: 'e',           scope: {             date: '='           },           replace: true,           template: ' div ng-click="date.setdate(date.getdate()+5)"  {{ date }}  /div ',         }       });        module.directive('myform', function() {         return {           restrict: 'e',           scope: {             popover: '=?',             value: '='           },           transclude: true,           replace: true,           template:             ' div ' +               ' a href="" ng-transclude  /a ' +               ' form ng-submit="submit($event)" ng-hide="popover    !formvisible" ng-attr-popover="{{ popover }}" class="form-inline" ' +                 ' simple-date-picker date="value"  /simple-date-picker ' +                 ' div ng-hide="!popover" ' +                   ' button type="submit" class="btn btn-primary" ok /button ' +                   ' button type="button" class="btn" ng-click="formvisible=false" close /button ' +                 ' /div ' +                 ' div class="editable-error help-block" ng-show="error" {{ error }} /div ' +               ' /form ' +             ' /div ',           controller: function($scope, $element, $attrs) {             $scope.formvisible = false;             $scope.submit = function(evt) {               $scope.formvisible = false;             }           }       }});        module.directive('popover', function($compile) {         return {           restrict: 'a',           scope: false,           compile: function compile(telement, tattrs, transclude) {             return {               pre: function prelink(scope, ielement, iattrs, controller) {               },               post: function postlink(scope, ielement, iattrs, controller) {                 var attrs = iattrs;                 var element = ielement;                  // we assume that the trigger (i.e. the element the popover will be                 // positioned at is the previous child.                 var trigger = element.prev();                 var popup = element;                  // connect scope to popover.                 trigger.on('shown', function() {                   var tip = trigger.data('popover').tip();                   $compile(tip)(scope);                   scope.$digest();                 });                  trigger.popover({                   html: true,                   content: function() {                     scope.$apply(function() {                       scope.formvisible = true;                     });                     return popup;                   },                   container: 'body'                 });                 scope.$watch('formvisible', function(formvisible) {                   if (!formvisible) {                     trigger.popover('hide');                   }                 });                 if (trigger.data('popover')) {                   trigger.data('popover').tip().css('width', '500px');                 }               }             }           }         };       });        function myctrl($scope) {           $scope.value = new date(0);       }        angular.element(document).ready(function() {         angular. (document, ['module']);     });         /script     /head      body ng-controller="myctrl"       my-form popover="true" value="value"      {{ value }}    /my-form     /body    /html     