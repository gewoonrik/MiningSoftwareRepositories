search results not efficient, php  i am using   2.3.1; i have a search feature and results page. the results are very specific.     example:  product name: ad-45.  typed into search query = yields lots of results.     ad45 yields no results...    how can i ignore "-" if the first result yields nothing, and ignore "/" if the first result yields nothing.    here is my code:      ?php  if(!isset($_get['s'])) {     die('you must define a search term!'); }  $highlight = true; //highlight results or not $search_in = array('html', 'htm', 'php'); //allowable filetypes to search in $search_dir = '..'; //starting directory $recursive = true; //should it search recursively or not define('side_chars', 80); $file_count = 0; $search_term = mb_strtolower($_get['s'], 'utf-8'); //$search_term = $_get['s']; $search_term_length = strlen($search_term); $final_result = array();  $files = list_files($search_dir);  foreach($files as $file) {     $contents = file_get_contents($file);     preg_match("/\ title\ (.*)\ \/title\ /", $contents, $page_title); //getting page title     if(preg_match("#\ body.*\ (.*)\ \/body\ #si", $contents, $body_content)) { //getting content only between  body  /body  tags         $clean_content = strip_tags($body_content[0]); //remove html tags         $clean_content = preg_replace('/\s+/', ' ', $clean_content); //remove duplicate whitespaces, carriage returns, tabs, etc         //$found = strpos_recursive($clean_content, $search_term);         $found = strpos_recursive(mb_strtolower($clean_content, 'utf-8'), $search_term);         $final_result[$file_count]['page_title'][] = $page_title[1];         $final_result[$file_count]['file_name'][] = $file;     }     if($found    !empty($found)) {         for($z = 0; $z   count($found[0]); $z++) {             $pos = $found[0][$z][1];             $side_chars = side_chars;             if($pos   side_chars) {                 $side_chars = $pos;                 $pos_end = side_chars + $search_term_length;             } else {                 $pos_end = side_chars * 2 + $search_term_length;             }              $pos_start = $pos - $side_chars;             $str = substr($clean_content, $pos_start, $pos_end);             $result = preg_replace('#' . $search_term . '#ui', ' span class="search" \0 /span ', $str);             //$result = preg_replace('#'.$search_term.'#ui', ' span class="search" '.$search_term.' /span ', $str);             $final_result[$file_count]['search_result'][] = $result;         }     } else {         $final_result[$file_count]['search_result'][] = '';     }     $file_count++; } ?       i have added this near the top as a workaround as my issue is really with part numbers, but i am not sure if i need it:     function str_insert($str, $search, $insert) {     $index = strpos($str, $search);     if($index === false) {         return $str;     }     return substr_replace($str, $insert . $search, $index, strlen($search)); } if(strpos($search_term, "-40")   -1 || strpos($search_term, "-45")   -1) {} else { $search_term = str_insert($search_term, "4", "-"); }    