play 2.0.1 custom field constructor... extra parameters?  i am new to the play framework and want to write my own     field constructor, which includes the usage of the    icon-classes . to make this dynamic i need to pass the icon-class via extra parameter. is that even possible? i tried the following and some other variations:     index.scala.html      @(loginform: form[login])  @import helper._ @implicitfieldconstructor = @{ fieldconstructor(  input.render) }  @main("akquise") {   div class="container row"       div class="span4 offset5"          @form(routes.application.login(), args = 'class -  "well"){              h3 anmeldung /h3               fieldset              @inputtext(loginform("username"), '_label -  "nutzername", '_iconcls -  "icon-user")             @inputpassword(loginform("password"), '_label -  "passwort", '_iconcls -  "icon-key")              /fieldset                button type="submit" class="btn btn-primary" login /button                      }      /div   /div   }         input.scala.html      @(elements: helper.fieldelements)  @**************************************************  * generate input according   bootsrap rules * **************************************************@  label for="@elements.id" @elements.label /label   div class="input-prepend"       span class="add-on" style="margin-right:-5px;"           i class="@elements.iconcls icon-size"  /i       /span      @elements.input  /div       with these parameters the compiler throws this error:     value iconcls is not a member of views.html.helper.fieldelements     how can i pass other arguments if that doesn't work?  