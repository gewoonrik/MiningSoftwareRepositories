google maps api view and populate issues with gmaps4rails gem in rails 4  i am trying to follow  this tutorial here  to add a new scaffold to my app.  in the video, the model was called user but my model is called reports.  i have made it to 4:14 but the map is not loading properly;  see here for screenshot.  it does not zoom in, only shows blue.  when i drag it one way or the other, it turns gray.       i have followed along with the tutorial at this point precisely, but i am wondering if perhaps the scaffold is incompatible with my other models?  or, is the   css template messing up the view of this map.      the problems are twofold--the view is not loading correctly, and the reports are not populating on the map.  i have pasted some of my source code below, let me know if you would like to see other files and thanks much for your help!     **reports_controller.rb**  class reportscontroller   applicationcontroller   before_action :set_report, only: [:show, :edit, :update, :destroy]    # get /reports   # get /reports.json   def index     @reports = report.all      @hash = gmaps4rails.build_markers(@reports) do |report, marker|       marker.lat report.latitude       marker.lng report.longitude       marker.infowindow report.description     end   end    # get /reports/1   # get /reports/1.json   def show   end    # get /reports/new   def new     @report = report.new   end    # get /reports/1/edit   def edit   end    # post /reports   # post /reports.json   def create     @report = report.new(report_params)      respond_to do |format|       if @report.save         format.html { redirect_to @report, notice: 'report was successfully created.' }         format.json { render action: 'show', status: :created, location: @report }       else         format.html { render action: 'new' }         format.json { render json: @report.errors, status: :unprocessable_entity }       end     end   end    # patch/put /reports/1   # patch/put /reports/1.json   def update     respond_to do |format|       if @report.update(report_params)         format.html { redirect_to @report, notice: 'report was successfully updated.' }         format.json { head :no_content }       else         format.html { render action: 'edit' }         format.json { render json: @report.errors, status: :unprocessable_entity }       end     end   end    # delete /reports/1   # delete /reports/1.json   def destroy     @report.destroy     respond_to do |format|       format.html { redirect_to reports_url }       format.json { head :no_content }     end   end    private     # use callbacks to share common setup or constraints between actions.     def set_report       @report = report.find(params[:id])     end      # never trust parameters from the scary internet, only allow the white list through.     def report_params       params.require(:report).permit(:latitude, :longitude, :address, :description, :photo, :title, :text)     end end      -*-     **index.html.erb**   script src="//maps.google.com/maps/api/js?v=3.13 amp;sensor=false amp;libraries=geometry" type="text/javascript"  /script   script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'  /script    h1 listing reports /h1    table     thead       tr         th latitude /th         th longitude /th         th address /th         th description /th         th photo /th         th title /th         th text /th         th  /th         th  /th         th  /th       /tr     /thead      tbody       % @reports.each do |report| %         tr           td  %= report.latitude %  /td           td  %= report.longitude %  /td           td  %= report.address %  /td           td  %= report.description %  /td           td  %= report.photo %  /td           td  %= report.title %  /td           td  %= report.text %  /td           td  %= link_to 'show', report %  /td           td  %= link_to 'edit', edit_report_path(report) %  /td           td  %= link_to 'destroy', report, method: :delete, data: { confirm: 'are you sure?' } %  /td         /tr       % end %     /tbody   /table    br    %= link_to 'new report', new_report_path %    div style='width: 800px;'     div id="map" style='width: 800px; height: 400px;'  /div   /div    script type="text/javascript"  handler = gmaps.build('google'); handler.buildmap({ provider: {}, internal: {id: 'map'}}, function(){   markers = handler.addmarkers( %=raw @hash.to_json % );   handler.bounds.extendwith(markers);   handler.fitmaptobounds(); });   /script     