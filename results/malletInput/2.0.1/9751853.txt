rails assets:precompile strange behavior  i found myself in front of a strange behavior of the  assets:precompile  task, or at least in front of something i don't fully understand.    so, i am using rails 3.1.3, sprockets 2.0.3, less 2.0.11 for my web application, plus i rely on   for the layout, so i am using also less-rails 2.1.8 and less-rails-  2.0.8. i have customized the style like they say  here .    the configuration of my assets is:     stylesheets |--application.css.scss |--custom-style/    |--variables.less    |--mixins.less    |--buttons.less |--custom-style.css.less      in application.css.scss i do     //=require custom-style      and in custom-style i do     @import " / /reset"; //@import " / /variables"; // modify this for custom colors, font-sizes, etc @import "custom-style/variables"; //@import " / /mixins"; @import "custom-style/mixins"; // and all the other standar  /  imports...  // other custom-style files to import @import "custom-style/buttons" //...  // and other rules here //...      finally in  buttons.less  i use some variables and mixins defined in the  variables.less  and  mixins.less    files,  @white  and  .buttonbackground  to be more specifc.    if i launch  bundle exec rake assets:precompile  with the above configuration, the task fails and i get this error:     $ bundle exec rake assets:precompile /usr/local/rvm/rubies/ruby-1.9.3-p0/bin/ruby /usr/local/rvm/gems/ruby-1.9.3-p0/bin/rake assets:precompile:all rails_env=production rails_groups=assets rake aborted! .buttonbackground is undefined      but is that if i do this changes     buttons.less --  buttons.css.less  @import "buttons"  --  @import "buttons.css.less"      everything works fine!!    is it something related to the scope of less variables and functions when working with nested imports? or something that has to do with the order the less parser, or sprockets, processes the import tree?    am i missing something or doing something in the wrong way?    thanks :)     note:  i get the error even with the original variables and mixins files, so it's not connected with the overrides done into them.  