rails4: how to serve gem specific javascript files?  i copied a working rails app into a different directory and renamed it using the rename gem.     most of the rails functionality works correct, but i am not able to serve assets bundled with gems specifically js files from  -slider-rails    i have compared my application.rb , gemfile and application.js and they are the same in both apps.     i have tried uninstalling and installing the gem again     simple comparison among the apps is not resolving issue.     here are the files i have verified are same in both apps:      gemfile   application.rb   application.html.haml   application.js       any suggestions how i should  debug this ?      thanks!    just to show you the issue, compare these 2 images in rubymine    working app:      non working app:      here is how some relevant files look like:     application.js        application.rb      require file.expand_path('../boot', __file__)  # pick the frameworks you want: require "active_record/railtie" require "action_controller/railtie" require "action_mailer/railtie" require "sprockets/railtie" # require "rails/test_unit/railtie"  #if defined?(bundler) #  # if you precompile assets before deploying to production, use this line #  #bundler.require(*rails.groups(:assets =  %w(development test))) #  # if you want your assets lazily compiled in production, use this line #  # bundler.require(:default, :assets, rails.env) #end  # rails4 bundler.require(:default, rails.env)  module smoothlyhired   class application   rails::application      # don't generate rspec tests for views and helpers     config.generators do |g|        g.test_framework :rspec, fixture: true       g.fixture_replacement :factory_girl, dir: 'spec/factories'         g.view_specs false       g.helper_specs false     end       config.autoload_paths += %w(#{config.root}/lib)        config.encoding = "utf-8"      # configure sensitive parameters which will be filtered from the log file.     config.filter_parameters += [:password, :password_confirmation]       config.active_record.schema_format = :sql        # enable the asset pipeline     config.assets.enabled = true      # version of your assets, change this if you want to expire all your assets     config.assets.version = '1.0'      #prevent initializing the application and connecting to db on bootup as required by heroku     #     # not required on rails4 anymore     #config.assets.initialize_on_precompile = false      #config.action_view.javascript_expansions[:defaults] = %w(jquery.min jquery_ujs)   end end       gemfile      source '  '2.1.0' gem 'rails', '4.0.0' gem 'sass-rails', '~  4.0.0' gem 'coffee-rails', git: 'git://github.com/rails/coffee-rails.git' gem 'uglifier', ' = 1.0.3' gem 'jquery-rails' gem 'jquery-ui-rails' gem 'font-awesome-sass' gem 'less-rails' gem 'therubyracer', :platform= :ruby gem ' - -rails' #gem 'jquery_mobile_rails' gem 'js-routes' gem 'cancan' gem 'devise' gem 'figaro' gem 'haml-rails' gem 'pg' gem 'rolify' gem 'sendgrid' gem 'simple_form' gem 'thin' gem 'rake'  #to use db for storing cookies instead cookie-store gem 'activerecord-session_store', github: 'rails/activerecord-session_store'  group :development do   gem 'better_errors'   #gem 'binding_of_caller', :platforms= [:mri_19, :rbx]   #commenting out platforms part, because may be that's stopping this to be used on the dev machine'   gem 'binding_of_caller'   gem 'guard-bundler'   gem 'guard-rails'   gem 'guard-rspec'   gem 'html2haml'   gem 'quiet_assets'   gem 'rb-fchange', :require= false   gem 'rb-fsevent', :require= false   gem 'rb-inotify', :require= false    # required with rails panel chrome extension. this gem should come after better_errors gem   gem 'meta_request' end group :development, :test do   #gem 'factory_girl_rails'   #gem 'rspec-rails'   gem 'pry-byebug'   gem 'pry-stack_explorer'   gem 'pry-rails'   gem 'pry-debugger'   gem 'debugger', ' = 1.6.5' end  group :test do   gem 'capybara'   gem 'database_cleaner'   gem 'email_spec' end  group :production do   gem 'rails_12factor' end  gem 'high_voltage'  #linkedin logins gem "linkedin" gem "omniauth" gem "omniauth-linkedin"  gem "omniauth-facebook"  #postgres use hstore in active record #gem 'activerecord-postgres-hstore'  gem 'state_machine' gem "ruby-graphviz"   #payments #gem 'stripe',:git =  '  'newrelic_rpm'  gem 'pgbackups-archive'  gem 'pg_search'  gem 'acts-as-taggable-on'  #gem 'activeadmin' , github: 'gregbell/active_admin' gem "activeadmin", git: " "  #gem 'kaminari' gem ' -slider-rails'  #gem ' _ _form_for' #gem ' _form' #gem 'formtastic' gem 'formtastic- ' gem 'rename'    