rails /   navbar / jquery differences between localhost and deployed (heroku)  i'm having an issue while developing a basic rails application. i've implemented     and its responsive navbar. when the page is loaded on mobile screens the navbar should slide down and slide back up as designed. i'm trying to figure out why certain scenarios are making the jquery animation glitchy and unusable. i want to make sure that this problem won't manifest in deployment and because it's quite annoying.     my scenarios are:       development server on localhost     chrome (17.0.963.83)       animation works fine.   no issues in developer tools       firefox (7.0.1)       animation glitchy.    firebug shows a 3 step process happening in      ` div class="nav-collapse" style="height: auto;" ... /div `  ` div class="nav-collapse collapse" style="height: 0px;" ... /div `  ` div class="nav-collapse" style="height: auto;" ... /div `          safari on iphone 4 and iphone simulator       animation glitchy.   apparent 3 step process as well.         deployed on heroku     chrome (17.0.963.83)       works fine       firefox (7.0.1)       works fine       safari on iphone 4 and iphone simulator       works fine         as requested...     application.js - where i'm calling the scripts      //= require jquery //= require jquery_ujs //= require  -transition.js //= require  -alert.js //= require  -button.js //= require  -carousel.js //= require  -collapse.js //= require  -dropdown.js //= require  -modal.js //= require  -tooltip.js //= require  -scrollspy.js //= require  -tab.js //= require  -typeahead.js //= require_tree .       gemfile.lock      gem   remote:    specs:     actionmailer (3.2.2)       actionpack (= 3.2.2)       mail (~  2.4.0)     actionpack (3.2.2)       activemodel (= 3.2.2)       activesupport (= 3.2.2)       builder (~  3.0.0)       erubis (~  2.7.0)       journey (~  1.0.1)       rack (~  1.4.0)       rack-cache (~  1.1)       rack-test (~  0.6.1)       sprockets (~  2.1.2)     activemodel (3.2.2)       activesupport (= 3.2.2)       builder (~  3.0.0)     activerecord (3.2.2)       activemodel (= 3.2.2)       activesupport (= 3.2.2)       arel (~  3.0.2)       tzinfo (~  0.3.29)     activeresource (3.2.2)       activemodel (= 3.2.2)       activesupport (= 3.2.2)     activesupport (3.2.2)       i18n (~  0.6)       multi_json (~  1.0)     arel (3.0.2)     builder (3.0.0)     coffee-rails (3.2.2)       coffee-script ( = 2.2.0)       railties (~  3.2.0)     coffee-script (2.2.0)       coffee-script-source       execjs     coffee-script-source (1.2.0)     erubis (2.7.0)     execjs (1.3.0)       multi_json (~  1.0)     hike (1.2.1)     i18n (0.6.0)     journey (1.0.3)     jquery-rails (2.0.1)       railties ( = 3.2.0,   5.0)       thor (~  0.14)     json (1.6.5)     mail (2.4.4)       i18n ( = 0.4.0)       mime-types (~  1.16)       treetop (~  1.4.8)     mime-types (1.17.2)     multi_json (1.1.0)     mysql2 (0.3.11)     pg (0.13.2)     polyglot (0.3.3)     rack (1.4.1)     rack-cache (1.2)       rack ( = 0.4)     rack-ssl (1.3.2)       rack     rack-test (0.6.1)       rack ( = 1.0)     rails (3.2.2)       actionmailer (= 3.2.2)       actionpack (= 3.2.2)       activerecord (= 3.2.2)       activeresource (= 3.2.2)       activesupport (= 3.2.2)       bundler (~  1.0)       railties (= 3.2.2)     railties (3.2.2)       actionpack (= 3.2.2)       activesupport (= 3.2.2)       rack-ssl (~  1.3.2)       rake ( = 0.8.7)       rdoc (~  3.4)       thor (~  0.14.6)     rake (0.9.2.2)     rdoc (3.12)       json (~  1.4)     sass (3.1.15)     sass-rails (3.2.4)       railties (~  3.2.0)       sass ( = 3.1.10)       tilt (~  1.3)     sprockets (2.1.2)       hike (~  1.2)       rack (~  1.0)       tilt (~  1.1, != 1.3.0)     thor (0.14.6)     tilt (1.3.3)     treetop (1.4.10)       polyglot       polyglot ( = 0.3.1)     tzinfo (0.3.32)     uglifier (1.2.3)       execjs ( = 0.3.0)       multi_json ( = 1.0.2)  platforms   ruby  dependencies   coffee-rails (~  3.2.1)   jquery-rails   json   mysql2   pg   rails (= 3.2.2)   sass-rails (~  3.2.3)   uglifier ( = 1.0.3)          jsfiddle with my basic code          -collapse.js     i think that something in this could be causing the issue but i'm not sure.     !function( $ ){    "use strict"    var collapse = function ( element, options ) {     this.$element = $(element)     this.options = $.extend({}, $.fn.collapse.defaults, options)      if (this.options["parent"]) {       this.$parent = $(this.options["parent"])     }      this.options.toggle    this.toggle()   }    collapse.prototype = {      constructor: collapse    , dimension: function () {       var haswidth = this.$element.hasclass('width')       return haswidth ? 'width' : 'height'     }    , show: function () {       var dimension = this.dimension()         , scroll = $.camelcase(['scroll', dimension].join('-'))         , actives = this.$parent    this.$parent.find('.in')         , hasdata        if (actives    actives.length) {         hasdata = actives.data('collapse')         actives.collapse('hide')         hasdata || actives.data('collapse', null)       }        this.$element[dimension](0)       this.transition('addclass', 'show', 'shown')       this.$element[dimension](this.$element[0][scroll])      }    , hide: function () {       var dimension = this.dimension()       this.reset(this.$element[dimension]())       this.transition('removeclass', 'hide', 'hidden')       this.$element[dimension](0)     }    , reset: function ( size ) {       var dimension = this.dimension()        this.$element         .removeclass('collapse')         [dimension](size || 'auto')         [0].offsetwidth        this.$element[size ? 'addclass' : 'removeclass']('collapse')        return this     }    , transition: function ( method, startevent, completeevent ) {       var that = this         , complete = function () {             if (startevent == 'show') that.reset()             that.$element.trigger(completeevent)           }        this.$element         .trigger(startevent)         [method]('in')        $.support.transition    this.$element.hasclass('collapse') ?         this.$element.one($.support.transition.end, complete) :         complete()     }    , toggle: function () {       this[this.$element.hasclass('in') ? 'hide' : 'show']()     }    }    /* collapsible plugin definition   * ============================== */    $.fn.collapse = function ( option ) {     return this.each(function () {       var $this = $(this)         , data = $this.data('collapse')         , options = typeof option == 'object'    option       if (!data) $this.data('collapse', (data = new collapse(this, options)))       if (typeof option == 'string') data[option]()     })   }    $.fn.collapse.defaults = {     toggle: true   }    $.fn.collapse.constructor = collapse    /* collapsible data-api   * ==================== */    $(function () {     $('body').on('click.collapse.data-api', '[data-toggle=collapse]', function ( e ) {       var $this = $(this), href         , target = $this.attr('data-target')           || e.preventdefault()           || (href = $this.attr('href'))    href.replace(/.*(?=#[^\s]+$)/, '') //strip for ie7         , option = $(target).data('collapse') ? 'toggle' : $this.data()       $(target).collapse(option)     })   })  }( window.jquery );    