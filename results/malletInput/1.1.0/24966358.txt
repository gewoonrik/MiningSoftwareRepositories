why drop down display first character in capital after dot  i make a drop down on pop up screen .i am able to make that drop down using jqery mobile.i used dform plugin.everything is working fine .but i have one issue my first character display in capital letter when i added   .min.css   why ? when i run my program without  .min.css it work fine .but when i run with  .css it give first letter capital after "." dot.as i written in small .this problem is only in chrome browser .when i run in firefox it work perfectly .    can you please explain why it is occurring.    here is my code.      !doctype html   html   head       meta charset="utf-8"     title js bin /title        link href="    .min.css?m=" rel="stylesheet" type="text/css" /       link href=" " rel="stylesheet" type="text/css" /       link href="  " rel="stylesheet" type="text/css" /         script src=" "  /script       script src=" "  /script       script src=" "  /script       /head   body      button id="test" test /button     div data-role="popup" data-dismissible='false' data-transition="flip" id="tabbedpopup" data-theme="a"  a href="#"                                                                                                           data-rel="back"                                                                                                           data-role="button"                                                                                                           data-theme="a"                                                                                                           data-icon="delete"                                                                                                           data-iconpos="notext"                                                                                                           class="ui-btn-right  cross-border  cross-border closepopup_h button circleclass"  close /a        div id="commandinfo"  /div       div id="commandinfoheader" class="comandinfoheader"  /div       div data-role="collapsible-set" data-theme="b" data-content-theme="b" id="tabbedset" data-iconpos="left"         /div   /div    /body   script type="text/javascript"   $(function () {     $('#test').click(function(){       createcommandpopuptabs("tc_2-cmd_1_voicecallaudiomosmo");        $("#tabbedpopup").popup("open");     })  });      function createcommandpopuptabs(id) {       var tabsheader = ["inputparameter"];    var header = " h3  hh /h3 ";   var commmand = "voicecallaudiomosmo";   var button = ' button onclick="return submitcommand( quot;' + id       + ' quot;)" style="" class="donebtn common-button1" save /button ';   //$("#commandinfo").append(header);   $("#commandinfo").append(button);      $("#commandinfoheader").html(header);   for ( var i = 0; i   tabsheader.length; i++) {     var headerid = tabsheader[i] + "_tab" + commmand;     var header = " div data-role='collapsible' data-collapsed='false' id='"         + headerid + "'  h3 hhh /h3  /div ";     var content = generatecommandtabcontent(tabsheader[i], id);     $("#tabbedset").append(header);     $("#tabbedset").find("#" + headerid).append(content);     $("#tabbedset").collapsibleset("refresh");            $('input[name=direction]').parent().addclass('cleassr')          $("#tabbedset").children(":first").collapsible( "expand" );   } }      function generatecommandtabcontent(name, id) {    var commandname = "voicecallaudiomosmo";    if (name == "inputparameter") {     var object = new window[commandname]();     var map = object.generateinputrequirment();     var formdata = generateinputparamform(map, id, status);     var form = $(" form / ");     var dform = form.dform(formdata);     return dform;   }    return null; } function voicecallaudiomosmo() {     command_name = "voicecallmos";     command_display_name = "voicecallmos";     this.map = {}; }  voicecallaudiomosmo.prototype.generateinputrequirment = function () {     if(typeof voicecallaudiomosmo.json!="undefined") {         var inputs = voicecallaudiomosmo.json.input;         for (var key in inputs) {             var inputfield = inputs[key];             var inputparameterinfo = new inputparameterinfo();             for (var inputkey in inputfield) {                 inputparameterinfo[inputkey] = inputfield[inputkey];             }             this.map[inputparameterinfo.name] = inputparameterinfo;         }         return this.map;     } }; function inputparameterinfo() {  }  voicecallaudiomosmo.json = {     "commandname": "voicecallaudiomosmo",     "input": {         "reffilename": {             "displaydetail": "the reference file name to play in case of uplink channel",             "displayname": "ref file name",             "inputtype": "switch",             "name": "reffilename",             "inputvalues": {                  "usareference.wav": "usareference.wav",                 "reference.wav": "reference.wav"             },             "value": "",             "unit": "none",             "required": false,             "visible": true         }         }  };  function generateinputparamform(map, id, status) {   var formid = "form_" + id;    var formdata = {     elements : []   };   formdata.id = formid;   formdata.name = formid;   formdata.method = "post";    var div = {     html : []   };   div.type = "div";   div.class = "inputdiv";   div.caption = " h3 input parameters /h3 ";    var tabindex = 1;    var arr = id.split("-");   var data = null;     for ( var key in map) {      var inputobj = map[key];         if (inputobj.visible==false    inputobj.required==false) {              continue;          }else {             var obj = createformobject(inputobj);         }     //var obj = createformobject(inputobj);         if(typeof data=="undefined"){             obj.value = inputobj["value"];         }else if (data != undefined    data.hasownproperty(inputobj["name"])) {             obj.value = data[inputobj["name"]];         }      /*if (data != undefined    data.hasownproperty(inputobj["name"])) {       obj.value = data[inputobj["name"]];     } else if (inputobj.hasownproperty("value")) {       obj.value = inputobj["value"];     }*/      if (status == "view") {       obj.readonly = "true";       obj.disabled = "disabled";     }      obj.tabindex = tabindex;     var objname = "voicecallaudiomosmo";     obj.onblur = "validateelement('" + objname + "', '" + formid + "','"         + obj.name + "')";      var unit = {};      var fieldset = {       html : []     };     fieldset.type = "fieldset";     fieldset.caption = inputobj["displayname"];     fieldset.html.push(obj);           $("div   fieldset legend:contains('*')").each(function () {             $(this).html($(this).html().replace("*", " span class='red' * /span "));         });        div.html.push(fieldset);     tabindex++;   }    formdata.elements.push(div);    return formdata; }  function createformobject(inputobj) {     var obj = {};   if (inputobj.hasownproperty("inputtype")) {     if (inputobj["inputtype"] == "list") {       var list = inputobj["inputvalues"];       obj.type = "select";       obj.options = list;     } else if (inputobj["inputtype"] == "number") {       obj.type = "text";     } else if (inputobj["inputtype"] == "switch") {       var list = inputobj["inputvalues"];       obj.type = "select";       obj.options = list;     } else {       obj.type = "text";     }   } else {     obj.type = "text";   }    if (!inputobj.hasownproperty("displayname")) {     obj.type = "hidden";   }    obj.id = inputobj["name"];   obj.name = inputobj["name"];   obj.required = inputobj["required"];     obj.placeholder = inputobj["placeholder"];     obj.classes = inputobj["class"];     obj.classname = inputobj["class"];     obj.class = inputobj["class"];       obj.title= inputobj["displaydetail"];    return obj; }    /script   /html       it display a drop down when you click button.drop down value  usareference.wav .here i written "w" in small but it display in capital.but when i remove this css            .min.css?m=" rel="stylesheet" type="text/css" /> it show in small letter ? why ?  