incorporating   into a git repo, using subtree merging  i'm working on a project where we'd like to edit the less files that came with    . the  standard advice  is to leave those files untouched, to make it easier to upgrade  . but that advice isn't working for us; our code is becoming fragile and hard to maintain.    it seems like it should be possible to solve this with git subtree merging: we could edit  's less files to have clear, maintainable code, then use git's merge tools to bring in new versions of  .    we've come up with a plan for using subtree merging. but before we put the plan into action, i'd like to get some feedback:  are there significant drawbacks that we've overlooked? is there a better/simpler approach?     approaches with significant drawbacks    in the  simplest approach  to subtree merging, all the commits from the subtree (i.e.,  ) are merged into your project's    