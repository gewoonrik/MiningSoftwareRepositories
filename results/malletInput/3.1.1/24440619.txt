missing resources for grails   file upload plugin?  i am trying to use the grails   file upload plugin in my grails application (   -file-upload ).    my grails version is 2.2.1. the plugin version is 2.1.2. the plugin installation is successful. i have also installed  -  -3.1.1.3 plugin. i am trying to use the ui flavour of the upload plugin. what are the resources that needs to be included. the documentation of the plugin does not talk about it.     currently i include the following.       r:require module=" "/   r:require module=" -file-upload"/       however i get the following error.      java.lang.runtimeexception: it looks like you are missing some calls to the r:layoutresources tag. after rendering your page the following have not been rendered: [defer]     at sun.reflect.nativeconstructoraccessorimpl.newinstance0(native method)     at sun.reflect.nativeconstructoraccessorimpl.newinstance(nativeconstructoraccessorimpl.java:57)     at sun.reflect.delegatingconstructoraccessorimpl.newinstance(delegatingconstructoraccessorimpl.java:45)     at java.lang.reflect.constructor.newinstance(constructor.java:525)     at org.codehaus.groovy.reflection.cachedconstructor.invoke(cachedconstructor.java:77)     at org.codehaus.groovy.runtime.callsite.constructorsite$constructorsitenounwrapnocoerce.callconstructor(constructorsite.java:102)     at org.codehaus.groovy.runtime.callsite.callsitearray.defaultcallconstructor(callsitearray.java:57)     at org.codehaus.groovy.runtime.callsite.abstractcallsite.callconstructor(abstractcallsite.java:182)     at org.codehaus.groovy.runtime.callsite.abstractcallsite.callconstructor(abstractcallsite.java:190)     at org.grails.plugin.resource.devmodesanityfilter.dofilter(devmodesanityfilter.groovy:52)     at org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)     at org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)     at org.springframework.security.web.filterchainproxy$virtualfilterchain.dofilter(filterchainproxy.java:      buildconfig.groovy     grails.servlet.version = "3.0" // change depending on target container compliance (2.5 or 3.0) grails.project.class.dir = "target/classes" grails.project.test.class.dir = "target/test-classes" grails.project.test.reports.dir = "target/test-reports" grails.project.target.level = 1.7 grails.project.source.level = 1.7 grails.project.dependency.resolution = {     // inherit grails' default dependencies     inherits("global") {         // specify dependency exclusions here; for example, uncomment this to disable ehcache:         // excludes 'ehcache'     }     log "warn" // log level of ivy resolver, either 'error', 'warn', 'info', 'debug' or 'verbose'     checksums true // whether to verify checksums on resolve     legacyresolve false // whether to do a secondary resolve on plugin installation, not advised and here for backwards compatibility      repositories {         inherits false // whether to inherit repository definitions from plugins         grailsplugins()         grailshome()         mavenrepo '     }      dependencies {         //mysql         provided 'mysql:mysql-connector-java:5.1.16'         //joda         compile "joda-time:joda-time:2.1"     }      plugins {         compile ":hibernate:$grailsversion"         compile ":resources:1.1.6"         compile ":zipped-resources:1.0"         compile ':cache-headers:1.1.6'         //compile ":cached-resources:1.0"         //compile ":yui-minify-resources:0.1.5"         compile ':cache:1.1.6'         compile ':spring-security-core:1.2.7.3'         compile ':spring-security-ldap:1.0.6'         compile ":jquery:1.10.2"         compile ":jquery-ui:1.10.3"         compile ": -file-upload:2.1.2"         compile ":excel-import:1.0.0"         compile ": - :3.1.1.3"          //target         build ":tomcat:$grailsversion"     } }      anyone knows how to fix this?  