links inside accordion don't work  i'm using   for make an accordion panel, and when i put a link inside the panel to go to other page it doesnt work. â¿what can i do to make this link work? thank you very much!    here is my html      div class="panel-group" id="accordion"               div class="panel panel-default"                 div class="panel-heading"                   h4 class="panel-title"      a data-toggle="collapse" class="panel-toggle" data-parent="#accordion" href="#collapseone" tittle section /a   /h4                 /div                  div id="collapseone" class="panel-collapse collapse"                   div class="panel-body"  text inside accordion.                 a href=" " this link doesn't work /a                 /div               /div       and here its   js (sorry its too big)     /* ========================================================================  *  : collapse.js v3.1.1  *   .com/javascript/#collapse  * ========================================================================  * copyright 2011-2014  , inc.  * licensed under mit (  /blob/master/license)  * ======================================================================== */   +function ($) {    'use strict';    // collapse public class definition   // ================================    var collapse = function (element, options) {      this.$element      = $(element)     this.options       = $.extend({}, collapse.defaults, options)     this.transitioning = null      if (this.options.parent) this.$parent = $(this.options.parent)     if (this.options.toggle) this.toggle()   }    collapse.defaults = {     toggle: true   }    collapse.prototype.dimension = function () {     var haswidth = this.$element.hasclass('width')     return haswidth ? 'width' : 'height'   }    collapse.prototype.show = function () {     if (this.transitioning || this.$element.hasclass('in')) return      var startevent = $.event('show.bs.collapse')     this.$element.trigger(startevent)     if (startevent.isdefaultprevented()) return      var actives = this.$parent    this.$parent.find('  .panel   .in')      if (actives    actives.length) {       var hasdata = actives.data('bs.collapse')       if (hasdata    hasdata.transitioning) return       actives.collapse('hide')       hasdata || actives.data('bs.collapse', null)     }      var dimension = this.dimension()      this.$element       .removeclass('collapse')       .addclass('collapsing')       [dimension](0)      this.transitioning = 1      var complete = function () {       this.$element         .removeclass('collapsing')         .addclass('collapse in')         [dimension]('auto')       this.transitioning = 0       this.$element.trigger('shown.bs.collapse')     }      if (!$.support.transition) return complete.call(this)      var scrollsize = $.camelcase(['scroll', dimension].join('-'))      this.$element       .one($.support.transition.end, $.proxy(complete, this))       .emulatetransitionend(350)       [dimension](this.$element[0][scrollsize])   }    collapse.prototype.hide = function () {     if (this.transitioning || !this.$element.hasclass('in')) return      var startevent = $.event('hide.bs.collapse')     this.$element.trigger(startevent)     if (startevent.isdefaultprevented()) return      var dimension = this.dimension()      this.$element       [dimension](this.$element[dimension]())       [0].offsetheight      this.$element       .addclass('collapsing')       .removeclass('collapse')       .removeclass('in')      this.transitioning = 1      var complete = function () {       this.transitioning = 0       this.$element         .trigger('hidden.bs.collapse')         .removeclass('collapsing')         .addclass('collapse')     }      if (!$.support.transition) return complete.call(this)      this.$element       [dimension](0)       .one($.support.transition.end, $.proxy(complete, this))       .emulatetransitionend(350)   }    collapse.prototype.toggle = function () {     this[this.$element.hasclass('in') ? 'hide' : 'show']()   }     // collapse plugin definition   // ==========================    var old = $.fn.collapse    $.fn.collapse = function (option) {     return this.each(function () {       var $this   = $(this)       var data    = $this.data('bs.collapse')       var options = $.extend({}, collapse.defaults, $this.data(), typeof option == 'object'    option)        if (!data    options.toggle    option == 'show') option = !option       if (!data) $this.data('bs.collapse', (data = new collapse(this, options)))       if (typeof option == 'string') data[option]()     })   }    $.fn.collapse.constructor = collapse     // collapse no conflict   // ====================    $.fn.collapse.noconflict = function () {     $.fn.collapse = old     return this   }     // collapse data-api   // =================    $(document).on('click.bs.collapse.data-api', '[data-toggle=collapse]', function (e) {     var $this   = $(this), href     var target  = $this.attr('data-target')         || e.preventdefault()         || (href = $this.attr('href'))    href.replace(/.*(?=#[^\s]+$)/, '') //strip for ie7     var $target = $(target)     var data    = $target.data('bs.collapse')     var option  = data ? 'toggle' : $this.data()     var parent  = $this.attr('data-parent')     var $parent = parent    $(parent)      if (!data || !data.transitioning) {       if ($parent) $parent.find('[data-toggle=collapse][data-parent="' + parent + '"]').not($this).addclass('collapsed')       $this[$target.hasclass('in') ? 'addclass' : 'removeclass']('collapsed')     }      $target.collapse(option)   })  }(jquery);      thank you for helping me!!  