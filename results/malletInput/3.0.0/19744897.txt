argumenterror in rails::welcomecontroller#index twitte    i have been developing using rails 4 and ruby 1.9.3, i was using the     tutorial from    - -basics  and i am getting the following error now trying to load my app, can anyone help with this, i have tried variations of get "welcome/index" and root to: 'welcome#index' in my route.rb file.    here are my welcome controller, framework trace, routes.rb and gem file:    error message: argumenterror in rails::welcomecontroller#index    /////framework trace     actionpack (4.0.0) lib/abstract_controller/base.rb:89:in `initialize' actionpack (4.0.0) lib/abstract_controller/base.rb:89:in `new' actionpack (4.0.0) lib/abstract_controller/base.rb:89:in `action_methods' actionpack (4.0.0) lib/action_controller/metal/hide_actions.rb:36:in `action_methods' actionpack (4.0.0) lib/abstract_controller/url_for.rb:25:in `action_methods' actionpack (4.0.0) lib/abstract_controller/base.rb:179:in `action_method?' actionpack (4.0.0) lib/abstract_controller/base.rb:230:in `method_for_action' actionpack (4.0.0) lib/action_controller/metal/hide_actions.rb:17:in `method_for_action' actionpack (4.0.0) lib/action_controller/metal/implicit_render.rb:14:in `method_for_action' actionpack (4.0.0) lib/abstract_controller/base.rb:130:in `process' actionpack (4.0.0) lib/abstract_controller/rendering.rb:44:in `process' actionpack (4.0.0) lib/action_controller/metal.rb:195:in `dispatch' actionpack (4.0.0) lib/action_controller/metal/rack_delegation.rb:13:in `dispatch' actionpack (4.0.0) lib/action_controller/metal.rb:231:in `block in action' actionpack (4.0.0) lib/action_dispatch/routing/route_set.rb:80:in `call' actionpack (4.0.0) lib/action_dispatch/routing/route_set.rb:80:in `dispatch' actionpack (4.0.0) lib/action_dispatch/routing/route_set.rb:48:in `call' actionpack (4.0.0) lib/action_dispatch/journey/router.rb:71:in `block in call' actionpack (4.0.0) lib/action_dispatch/journey/router.rb:59:in `each' actionpack (4.0.0) lib/action_dispatch/journey/router.rb:59:in `call' actionpack (4.0.0) lib/action_dispatch/routing/route_set.rb:655:in `call' warden (1.2.3) lib/warden/manager.rb:35:in `block in call' warden (1.2.3) lib/warden/manager.rb:34:in `catch' warden (1.2.3) lib/warden/manager.rb:34:in `call' rack (1.5.2) lib/rack/etag.rb:23:in `call' rack (1.5.2) lib/rack/conditionalget.rb:25:in `call' rack (1.5.2) lib/rack/head.rb:11:in `call' actionpack (4.0.0) lib/action_dispatch/middleware/params_parser.rb:27:in `call' actionpack (4.0.0) lib/action_dispatch/middleware/flash.rb:241:in `call' rack (1.5.2) lib/rack/session/abstract/id.rb:225:in `context' rack (1.5.2) lib/rack/session/abstract/id.rb:220:in `call' actionpack (4.0.0) lib/action_dispatch/middleware/cookies.rb:486:in `call' activerecord (4.0.0) lib/active_record/query_cache.rb:36:in `call' activerecord (4.0.0) lib/active_record/connection_adapters/abstract/connection_pool.rb:626:in `call' activerecord (4.0.0) lib/active_record/migration.rb:369:in `call' actionpack (4.0.0) lib/action_dispatch/middleware/callbacks.rb:29:in `block in call' activesupport (4.0.0) lib/active_support/callbacks.rb:373:in `_run__159494264__call__callbacks' activesupport (4.0.0) lib/active_support/callbacks.rb:80:in `run_callbacks' actionpack (4.0.0) lib/action_dispatch/middleware/callbacks.rb:27:in `call' actionpack (4.0.0) lib/action_dispatch/middleware/reloader.rb:64:in `call' actionpack (4.0.0) lib/action_dispatch/middleware/remote_ip.rb:76:in `call' actionpack (4.0.0) lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call' actionpack (4.0.0) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call' railties (4.0.0) lib/rails/rack/logger.rb:38:in `call_app' railties (4.0.0) lib/rails/rack/logger.rb:21:in `block in call' activesupport (4.0.0) lib/active_support/tagged_logging.rb:67:in `block in tagged' activesupport (4.0.0) lib/active_support/tagged_logging.rb:25:in `tagged' activesupport (4.0.0) lib/active_support/tagged_logging.rb:67:in `tagged' railties (4.0.0) lib/rails/rack/logger.rb:21:in `call' actionpack (4.0.0) lib/action_dispatch/middleware/request_id.rb:21:in `call' rack (1.5.2) lib/rack/methodoverride.rb:21:in `call' rack (1.5.2) lib/rack/runtime.rb:17:in `call' activesupport (4.0.0) lib/active_support/cache/strategy/local_cache.rb:83:in `call' rack (1.5.2) lib/rack/lock.rb:17:in `call' actionpack (4.0.0) lib/action_dispatch/middleware/static.rb:64:in `call' railties (4.0.0) lib/rails/engine.rb:511:in `call' railties (4.0.0) lib/rails/application.rb:97:in `call' rack (1.5.2) lib/rack/lock.rb:17:in `call' rack (1.5.2) lib/rack/content_length.rb:14:in `call' rack (1.5.2) lib/rack/handler/webrick.rb:60:in `service' c:/railsinstaller/ruby1.9.3/lib/ruby/1.9.1/webrick/httpserver.rb:138:in `service' c:/railsinstaller/ruby1.9.3/lib/ruby/1.9.1/webrick/httpserver.rb:94:in `run' c:/railsinstaller/ruby1.9.3/lib/ruby/1.9.1/webrick/server.rb:191:in `block in start_thread'      /////////routes.rb     myapp::application.routes.draw do   devise_for :users   #get "welcome/index"   root to: 'welcome#index' end      /////////welcome controller     class welcomecontroller   applicationcontroller   def index   end end      ////////gemfile     source '  bundle edge rails instead: gem 'rails', github: 'rails/rails' gem 'rails', '4.0.0'  # use sqlite3 as the database for active record gem 'sqlite3'  # use scss for stylesheets gem 'sass-rails', '~  4.0.0'  # use uglifier as compressor for javascript assets gem 'uglifier', ' = 1.3.0'  # use coffeescript for .js.coffee assets and views gem 'coffee-rails', '~  4.0.0'  # see   for more supported runtimes #gem 'therubyracer', platforms: :ruby  # use jquery as the javascript library gem 'jquery-rails'  # turbolinks makes following links in your web application faster. read more:   'turbolinks'  # build json apis with ease. read more:   'jbuilder', '~  1.2'  gem "paperclip", :git =  "git://github.com/thoughtbot/paperclip.git"  gem 'protected_attributes'  gem 'will_paginate'  gem 'devise'  gem 'cancan'  gem 'less-rails'  gem ' - -rails'  gem 'therubyracer'  #gem 'libv8'  group :doc do   # bundle exec rake doc:rails generates the api under doc/api.   gem 'sdoc', require: false end  # group :assets do   # gem ' - -rails' # end  # use activemodel has_secure_password # gem 'bcrypt-ruby', '~  3.0.0'  # use unicorn as the app server # gem 'unicorn'  # use capistrano for deployment # gem 'capistrano', group: :development  # use debugger # gem 'debugger', group: [:development, :test]    