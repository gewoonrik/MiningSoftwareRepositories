how to create jquery editable tables using  's typeahead functionality  i have two functions that individually work well.  the first one uses  's typeahead functionality.  the second one allows an html table cell to be editable without doing a submit or page refresh.  what i want done is combine the two without writing a whole new function for it.  for example: when a user double-clicks the table cell, i want the textbox to be typeahead enabled so that as he begins to type an entry, valid entries begin to show up in the menu below. once the user makes his selection, the underlying database table is updated as normal when the focus is lost.    i thought i could just add an event to "editable" like this:      cell.on('keydown', function() {$(".autofill").typeahead();});      but no luck with that :-(.  any suggestions?  below is the code of both functions.... btw, i'm using   version 2.1.1 and jquery 1.8.3     $(document).ready(function(){  /************************************************************               using  's typeahead  ************************************************************/ $('.autofill').typeahead({   source: function (query, process) {     query = $(".autofill").val();     link = 'ajax/gdata.aspx';     sp = $(".autofill").attr("proc");     src = $(".autofill").attr("src");     if(!src) src = "no source";          $.get(link, {desc:query}, function(data) {           var x = $.parsejson(data);           codes = [];           map = {};            $.each(x, function(i, cd) {             map[cd.code_desc] = cd;             codes.push(cd.code_desc);             process(codes);           });         });   },    matcher: function(item) {     if (item.tolowercase().indexof(this.query.trim().tolowercase()) != -1) {        return true;     }   },    sorter: function(items) {     return items.sort();   },    highlighter: function(item) {     var regex = new regexp( '(' + this.query + ')', 'gi' );     return item.replace( regex, " b $1 /b " );   },    updater: function(item) {     d = $(".autofill").attr("show");     selecteditem = map[item].code;     if (d == 0) {       return selecteditem;  //return code     } else {       return item;      //return description     }   } });   /************************************************************   edit underlying table's column directly from html table.         an editable field is highlighted in yellow ************************************************************/ $(".editable").dblclick(function() {   var a = $.url().param("type");   var b = $.url().param("id");   var c = $.url().param("grpid");   var d = $("input[name='step']").val();   var e = $(this).attr("data-cap");   var f = $(this).attr("data-ihtml");   var m = "table";   var warn = "#warn" + d;   var id = $(this).attr("data-id");   var type = $(this).attr("data-rec");   var db = "mydb";   var tab = a + b + '_' + type;   var column = $(this).attr("data-col");   var idcol = $(this).attr("data-idcol");   var idcolval = $(this).attr("data-idcolval");   var cell = $(this);   var cellwidth = cell.attr("width");   var prevcontent = cell.text();   var url = "ajax/p.aspx";   var et = $(this).attr("entry-type");   var s = $(this).attr("show");   var src = $(this).attr("src");    if(!src) {     src = '""';   }    if(!s) {     s = "1";   }    if(!e) {     e = "y";   }    if(!et) {     et = "";   }    if(!f) {     if(et == "") var f = ' input type="text" name="newvalue" size="4" value="' + prevcontent + '" id="txt' + id + '" / ';     if(et == "autofill") var f = ' input type="text" data-provide="typeahead" class="autofill" autocomplete="off" proc="1" show="' + s + '" name="newvalue" size="4" value="' + prevcontent + '" id="txt' + id + '" / ';   }    var form = ' form action = "javascript: this.preventdefault" ' + f + ' /form ';   var msg = "changes will take effect immediately after moving off this cell!";    $(warn).html('');   $(warn).append(' div class="alert alert-warning" ' + msg  + ' /div ');   cell.html(form).find('input[type=text]').focus().select().attr('width', cellwidth);   cell.on('click', function() {return false;});   cell.focusout(function() {     var newcontent = $("#txt" + id).val();     var newval = newcontent;     var g = f.slice(f.search("select"), 7);     if (g == "select") {       var h = "#txt" + id + " option:selected";       newcontent = $(h).text();     }     if (newcontent == "") {       cell.text(prevcontent);       return false;     }     if (newcontent == prevcontent) {       cell.text(prevcontent);       return false;     }      if (e == "y") {       newval = newval.touppercase();       newcontent = newcontent.touppercase();     }      var formdata = 'type=' + a + ' id=' + b + ' grpid=' + c + ' modal=' + m + ' db=' + db + ' tab=' + tab + ' col=' + column + ' val=' + newval + ' idcol=' + idcol + ' idcolval=' + idcolval + ' orig=' + prevcontent + ' cap=' + e;      $.ajax({       url   : url,       type  : "post",       data  : formdata,       datatype  : "html"     })       .done(function(msg) {     //console.log(msg);      if(!msg) {       $(warn).html('');       $(warn).append(' div class="alert alert-success" ' + "record successfully updated!" + ' /div ');           //location.reload(true);       cell.text(newcontent);     } else {       $(warn).html('');       $(warn).append(' div class="alert alert-error" ' + msg + ' /div ');       cell.text(prevcontent);     }     });    });    });  });    