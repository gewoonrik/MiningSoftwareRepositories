rails template is missing  hi does anyone know what is causing this error.     i'm new to rails but am guessing it has something to do with  . however, i have no idea how to fix it and i've been trying the last 2 hours.        error       template is missing missing template authentication/account_settings, application/account_settings with {:locale= [:en], :formats= [:html], :variants= [], :handlers= [:erb, :builder, :raw, :ruby, :jbuilder, :coffee]}. searched in: * "/home/action/workspace/paw/app/views" * "/home/action/.rvm/gems/ruby-2.1.1/gems/ - -rails-2.2.8/app/views"      i have  account_settings  defined in the authentication controller        authentication_controller.rb       # class written by alan dunne after following tutorials by marc clifton [available @   authenticationcontroller   applicationcontroller   def sign_in     @user = user.new   end    def login     username_or_email = params[:user][:username]     password = params[:user][:password]      if username_or_email.rindex('@')       email=username_or_email       user = user.authenticate_by_email(email, password)     else       username=username_or_email       user = user.authenticate_by_username(username, password)     end      if user       session[:user_id] = user.id       flash[:notice] = 'welcome'        redirect_to '/home'     else       flash.now[:error] = 'unknown user. please check your username and password.'        # assign user to instance variable for the `sign_in` view!       @user = user.new(params[:user])         render :action =  "sign_in"     end   end    def signed_out     session[:user_id] = nil     flash[:notice] = "you have been signed out."   end    def new_user     @user = user.new   end    def register     @user = user.new(params[:user])      if @user.valid?       @user.save       session[:user_id] = @user.id       flash[:notice] = 'welcome.'       redirect_to :root     else       render :action =  "new_user"     end   end      def account_settings     @user = current_user   end    def set_account_info     old_user = current_user      # verify the current password by creating a new user record.     @user = user.authenticate_by_username(old_user.username, params[:user][:password])      # verify     if @user.nil?       @user = current_user       @user.errors[:password] = "password is incorrect"       render :action =  "account_settings"     else       # update the user with any new username and email       @user.update(params[:user])       # set the old email and username, which is validated only if it has changed.       @user.previous_email = old_user.email       @user.previous_username = old_user.username        if @user.valid?     # if there is a new_password value, then we need to update the password.     @user.password = @user.new_password unless @user.new_password.nil? || @user.new_password.empty?     @user.save     flash[:notice] = 'account settings have been changed'     redirect_to :root       else     render :action =  "account_settings"       end     end   end  end          routes.rb       rails.application.routes.draw do   resources :match_picks    resources :matches    root :to= "home#index"   get "sign_in" =  "authentication#sign_in"   # get "home" =  "authentication#login"     # get "instructions" =  'home'   get "signed_out" =  "authentication#signed_out"   get "new_user" =  "authentication#new_user"   post "sign_in" =  "authentication#login"   put "sign_in" =  "authentication#login"   post "new_user" =  "authentication#register"   put "new_user" =  "authentication#register"   get "admin_users" =  "admin#users"   delete "user/:id" =  "admin#delete_user", :as =  "user"   get "admin_users" =  "authentication#admin_users"   get '/home', to: 'home#home'   get '/instructions', to: 'home#instructions'   get '/blocks', to: 'home#blocks'     post "match/create-match-pick" =  "matches#create_match_pick", :as =  :create_match_pick   get "account_settings" =  "authentication#account_settings"   put "account_settings" =  "authentication#set_account_info"    # the priority is based upon order of creation: first created -  highest priority.   # see how all your routes lay out with "rake routes".    # you can have the root of your site routed with "root"   # root 'welcome#index'    # example of regular route:   #   get 'products/:id' =  'catalog#view'    # example of named route that can be invoked with purchase_url(id: product.id)   #   get 'products/:id/purchase' =  'catalog#purchase', as: :purchase    # example resource route (maps http verbs to controller actions automatically):   #   resources :products    # example resource route with options:   #   resources :products do   #     member do   #       get 'short'   #       post 'toggle'   #     end   #   #     collection do   #       get 'sold'   #     end   #   end    # example resource route with sub-resources:   #   resources :products do   #     resources :comments, :sales   #     resource :seller   #   end    # example resource route with more complex sub-resources:   #   resources :products do   #     resources :comments   #     resources :sales do   #       get 'recent', on: :collection   #     end   #   end    # example resource route with concerns:   #   concern :toggleable do   #     post 'toggle'   #   end   #   resources :posts, concerns: :toggleable   #   resources :photos, concerns: :toggleable    # example resource route within a namespace:   #   namespace :admin do   #     # directs /admin/products/* to admin::productscontroller   #     # (app/controllers/admin/products_controller.rb)   #     resources :products   #   end end    