rails application not loading all javascript files production  i am working on a personal website hosted in aws. using ruby 1.9.3 rails 4.1.0beta1. when i run the code locally, it works like a charm. however when i push to aws, its missing either some js files or some css files. i think it is missing js files because if i remove the following from application.js     //= require_tree .      i can reproduce the issue locally.     here is my gem file:      source '  '1.9.3' #ruby-gemset=danielhamiltondotcom_rails_4_0  gem 'rails', '4.1.0.beta1'  group :development, :test do   gem 'rspec-rails', '2.13.1' end  group :test do   gem 'selenium-webdriver', '2.35.1'   gem 'capybara', '2.1.0' end  gem 'sass-rails', '4.0.1' gem 'uglifier', '2.1.1' gem 'coffee-rails', '4.0.1' gem 'jquery-rails', '3.0.4' gem 'turbolinks', '1.1.1' gem 'jbuilder', '1.0.2'  group :doc do   gem 'sdoc', '0.3.20', require: false end  group :production do   gem 'rails_12factor', '0.0.2' end       here is my production.rb file:      rails.application.configure do   # settings specified here will take precedence over those in config/application.rb.    # code is not reloaded between requests.   config.cache_classes = true    # eager load code on boot. this eager loads most of rails and   # your application in memory, allowing both thread web servers   # and those relying on copy on write to perform better.   # rake tasks automatically ignore this option for performance.   config.eager_load = true    # full error reports are disabled and caching is turned on.   config.consider_all_requests_local       = false   config.action_controller.perform_caching = true    # enable rack::cache to put a simple http cache in front of your application   # add `rack-cache` to your gemfile before enabling this.   # for large-scale production use, consider using a caching reverse proxy like nginx, varnish or squid.   # config.action_dispatch.rack_cache = true    # disable rails's static asset server (apache or nginx will already do this).   config.serve_static_assets = true    # compress javascripts and css.   config.assets.js_compressor = :uglifier   # config.assets.css_compressor = :sass    # do not fallback to assets pipeline if a precompiled asset is missed.   config.assets.compile = true    # generate digests for assets urls.   config.assets.digest = true    # version of your assets, change this if you want to expire all your assets.   config.assets.version = '1.0'    # specifies the header that your server uses for sending files.   # config.action_dispatch.x_sendfile_header = "x-sendfile" # for apache   # config.action_dispatch.x_sendfile_header = 'x-accel-redirect' # for nginx    # force all access to the app over ssl, use strict-transport-security, and use secure cookies.   # config.force_ssl = true    # set to :debug to see everything in the log.   config.log_level = :info    # prepend all log lines with the following tags.   # config.log_tags = [ :subdomain, :uuid ]    # use a different logger for distributed setups.   # config.logger = activesupport::taggedlogging.new(sysloglogger.new)    # use a different cache store in production.   # config.cache_store = :mem_cache_store    # enable serving of images, stylesheets, and javascripts from an asset server.   # config.action_controller.asset_host = " "    # precompile additional assets.   # application.js, application.css, and all non-js/css in app/assets folder are already added.   #config.assets.precompile += %w( search.js )    # ignore bad email addresses and do not raise email delivery errors.   # set this to true and configure the email server for immediate delivery to raise delivery errors.   # config.action_mailer.raise_delivery_errors = false    # enable locale fallbacks for i18n (makes lookups for any locale fall back to   # the i18n.default_locale when a translation can not be found).   config.i18n.fallbacks = true    # send deprecation notices to registered listeners.   config.active_support.deprecation = :notify    # disable automatic flushing of the log to improve performance.   # config.autoflush_log = false    # use default logging formatter so that pid and timestamp are not suppressed.   config.log_formatter = ::logger::formatter.new   config.assets.paths    rails.root.join('app','assets','font')   config.assets.precompile += %w(.svg .eot .woff .ttf)   config.assets.precompile =  ['*.js', '*.css', '*.css.erb']  end       here is a snippet of the html.erb page.       %= stylesheet_link_tag    "application", media: "all",     "data-turbolinks-track" =  false %   %= javascript_include_tag "application", "data-turbolinks-track" =  false %       i can't quite figure out which files are missing. please let me know if you need more information. i have been looking around all over and haven't been able to resolve this issue.    i have tried this:  rails 4: assets not loading in production .  