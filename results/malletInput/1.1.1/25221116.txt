rails 4 asset compilation is very slow (>1min) in dev mode. how to troubleshoot?  i am using a rails 4 app with  . at some point, the assets compilation got borked and now it it takes over a minute to reload a page if i make any changes to the scss files. changing the js files do not cause this delay. i have no idea what is causing this, but when i tried to just precompile the assets myself, the process takes about 2 seconds to complete. not sure why when it happens on the fly it takes over a minute, sometimes more than 2.     i'm using guard with livereload and when i save a change in a stylesheet, the page is livereloaded but without any stylesheet. if i reload the page, it takes over a minute to render. i'm hoping there's some obvious thing i'm just missing and someone spots it.     while troubleshooting, i switched the configuration so that the scss files are loaded in application.css.scss (with  *= require  syntax) and then imported the   variables and mixins in each file, but that was just as slow. i also tried using the cdn   and then over-writing, but also almost as slow, and it was a headache overwriting so many classes.    the delay is during the rendering of the layout, but it only happens when i make changes to a stylesheet. any other changes and it loads near instantly.    i have a bunch of design/css work i need to do, and it's nearly impossible with this issue. please help.    (there's probably some other files i should post here as well. just let me know and i'll post it.)    here's my gemfile:     source '  '2.0.0' #ruby-gemset=networkrf  gem 'rails', '4.0.1' gem 'pg', '0.15.1' gem ' -sass', '~  3.2.0' gem 'sass-rails', ' = 3.2' gem 'autoprefixer-rails'  gem 'bcrypt-ruby', '3.1.2' gem 'faker', '1.1.2' gem 'will_paginate', '3.0.4' gem ' -will_paginate', '0.0.9' gem 'font-awesome-rails' gem 'httparty' gem 'gmaps4rails' gem 'geocoder' gem 'sprockets_better_errors'  group :development, :test do   gem 'thin' end  group :development, :test do   gem 'rspec-rails', '2.13.1'   gem 'guard-rspec', '2.5.0'   gem 'spork-rails', github: 'sporkrb/spork-rails'   gem 'childprocess', '0.3.6'   gem 'guard-livereload', require: false   gem 'guard-spork', '1.5.0'   gem 'rack-livereload'   gem 'rb-fsevent', require: false   gem 'factory_girl_rails', '4.2.1' end  group :test do   gem 'selenium-webdriver', '2.35.1'   gem 'capybara', '2.1.0'   gem 'growl', '1.0.3'   gem 'capybara-screenshot'   gem 'launchy' end  # gem 'sass-rails', '4.0.0' gem 'uglifier', '2.1.1' gem 'coffee-rails', '4.0.0' gem 'jquery-rails', '3.0.4' gem 'turbolinks', '1.1.1' gem 'jbuilder', '1.0.2'  group :doc do   gem 'sdoc', '0.3.20', require: false end  group :production do   gem 'rails_12factor'   gem 'unicorn'   gem 'newrelic_rpm' end  # gem 'fog' # gem 'rmagick', '2.13.2' # gem 'carrierwave'      here's development.rb     networkrf::application.configure do    config.cache_classes = false    config.eager_load = false    config.consider_all_requests_local       = true   config.action_controller.perform_caching = false    config.action_mailer.raise_delivery_errors = false    config.active_support.deprecation = :log    config.active_record.migration_error = :page_load    config.assets.compress = false   config.assets.debug = true    config.middleware.insert_after(actiondispatch::static, rack::livereload)   config.assets.raise_production_errors = true end      application.rb     require file.expand_path('../boot', __file__) require "active_record/railtie" require "action_controller/railtie" require "action_mailer/railtie" require "sprockets/railtie" require "csv"  # require the gems listed in gemfile, including any gems # you've limited to :test, :development, or :production. bundler.require(:default, rails.env)  module networkrf   class application   rails::application     # settings in config/environments/* take precedence over those specified here.     # application configuration should go into files in config/initializers     # -- all .rb files in that directory are automatically loaded.      # set time.zone default to the specified zone and make active record auto-convert to this zone.     # run "rake -d time" for a list of tasks for finding time zone names. default is utc.     # config.time_zone = 'central time (us   canada)'      # the default locale is :en and all translations from config/locales/*.rb,yml are auto loaded.     # config.i18n.load_path += dir[rails.root.join('my', 'locales', '*.{rb,yml}').to_s]     # config.i18n.default_locale = :de      config.assets.precompile += %w(*.png *.jpg *.jpeg *.gif)   end end      application.css.scss     /*  * this is a manifest file that'll be compiled into application.css, which will include all the files  * listed below.  *  * any css and scss file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,  * or vendor/assets/stylesheets of plugins, if any, can be referenced here using a relative path.  *  * you're free to add application-wide styles to this file and they'll appear at the top of the  * compiled file, but it's generally better to create a new file per style scope.  *  *= require font-awesome  *= require main  */      main.css.scss     /** * * loads all stylesheets for the application in order * **/   @import " -custom"; @import "variables"; @import "theme"; @import "base"; @import "components"; @import "nav"; @import "home"; @import "scenes"; @import "custom"; @import "typography"; @import "utility";      rack-mini-test gem output:       is there anything else i could add? or any tests to run?  